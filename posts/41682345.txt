Pandas : Matching two dataframes with different index
Consider two dataframes :
I want to join these two dataframes in a way such that I get the result
I have tried the following :
I think it is trying to match them index by index , giving me a nan . I have tried joining X and Y also but can't get that to work . I think merging the two dataframes would work but I don't know how to merge them on column ' a ' and ' y ' appropriately
Any tips here would be greatly appreciated
You can use ` map ` to replace ` a ` in ` X ` with ` x ` in ` Y ` if it exists otherwise keep the original values :
Another option with merge , ( I corrected the data type in ` Y ` i.e. assume if the y column is float instead of string ):
Then a merge on ` x ` and ` a ` columns gives :
Then depends on your need , you can combine the columns ` a ` and ` x ` together or leave them as is which I think is actually more reasonable :
To combine column a and x , you can just do :
This gives the same result as the first option .
Thanks - seems to work well . Do you have any idea how to this with with .merge() ?
Brilliant thanks again . Could I ask why using set_index ( " y ") is necessary for both of the solutions ?
It's just a trick to save the effort to drop it later on , as you will have duplicated merge_on ( key ) columns in the result .
Ah OK that makes sense - and for the first solution it seems completely necessary ? It seems as though it " matches " based off the index
Right . For the map method it's necessary , as map looks for the index value pairs for matching .