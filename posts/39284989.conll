Parallelize	O
pandas	O
apply	B-API

New	O
to	O
pandas	O
,	O
I	O
already	O
want	O
to	O
parallelize	O
a	O
row-wise	O
apply	B-API
operation	O
.	O

So	O
far	O
I	O
found	O
Parallelize	O
apply	B-API
after	O
pandas	O
groupby	B-API
However	O
,	O
that	O
only	O
seems	O
to	O
work	O
for	O
grouped	O
data	O
frames	O
.	O

My	O
use	O
case	O
is	O
different	O
:	O
I	O
have	O
a	O
list	O
of	O
holidays	O
and	O
for	O
my	O
current	O
row	O
/	O
date	O
want	O
to	O
find	O
the	O
no-of-days	O
before	O
and	O
after	O
this	O
day	O
to	O
the	O
next	O
holiday	O
.	O

This	O
is	O
the	O
function	O
I	O
call	O
via	O
apply	B-API
:	O

How	O
can	O
I	O
speed	O
it	O
up	O
?	O

edit	O

I	O
experimented	O
a	O
bit	O
with	O
pythons	O
pools	O
-	O
but	O
it	O
was	O
neither	O
nice	O
code	O
,	O
nor	O
did	O
I	O
get	O
my	O
computed	O
results	O
.	O

"	O
python	O
pools	O
"	O
-	O
threads	O
or	O
processes	O
?	O

I	O
was	O
using	O
multiprocessing.Pool	O
(	O
processes=	O
#ofCPU	O
)	O

So	O
multiprocessing	O
is	O
not	O
guaranteed	O
to	O
speed	O
up	O
your	O
code	O
,	O
but	O
,	O
since	O
the	O
code	O
wasn't	O
working	O
correctly	O
,	O
it's	O
hard	O
to	O
know	O
what	O
at	O
all	O
it	O
was	O
running	O
there	O
.	O

You	O
might	O
want	O
to	O
make	O
your	O
question	O
about	O
that	O
(	O
FWIW	O
,	O
this	O
approach	O
looks	O
like	O
your	O
best	O
bet	O
to	O
me	O
)	O
.	O

Would	O
cythonizing	O
not	O
be	O
a	O
good	O
first	O
step	O
before	O
you	O
resort	O
to	O
parallelizing	O
apply	B-API
?	O

As	O
far	O
as	O
I	O
understand	O
the	O
problem	O
it	O
is	O
embarrassingly	O
parallel	O
e.g.	O
each	O
row	O
is	O
independent	O
,	O
so	O
parallel	O
execution	O
should	O
be	O
better	O
suited	O
.	O

I	O
think	O
going	O
down	O
the	O
route	O
of	O
trying	O
stuff	O
in	O
parallel	O
is	O
probably	O
over	O
complicating	O
this	O
.	O

I	O
haven't	O
tried	O
this	O
approach	O
on	O
a	O
large	O
sample	O
so	O
your	O
mileage	O
may	O
vary	O
,	O
but	O
it	O
should	O
give	O
you	O
an	O
idea	O
...	O

Let's	O
just	O
start	O
with	O
some	O
dates	O
...	O

We'll	O
use	O
some	O
holiday	O
data	O
from	O
`	O
pandas.tseries.holiday	O
`	O
-	O
note	O
that	O
in	O
effect	O
we	O
want	O
a	O
`	O
DatetimeIndex	B-API
`	O
...	O

This	O
gives	O
us	O
:	O

Now	O
we	O
find	O
the	O
indices	O
of	O
the	O
nearest	O
nearest	O
holiday	O
for	O
the	O
original	O
dates	O
using	O
`	O
searchsorted	B-API
`	O
:	O

Then	O
take	O
the	O
difference	O
between	O
the	O
two	O
:	O

You'll	O
need	O
to	O
be	O
careful	O
about	O
the	O
indices	O
so	O
you	O
don't	O
wrap	O
around	O
,	O
and	O
for	O
the	O
previous	O
date	O
,	O
do	O
the	O
calculation	O
with	O
the	O
`	O
indices	O
-	O
1	O
`	O
but	O
it	O
should	O
act	O
as	O
(	O
I	O
hope	O
)	O
a	O
relatively	O
good	O
base	O
.	O

I	O
updated	O
the	O
minimum	O
example	O
with	O
your	O
code	O
(	O
please	O
see	O
at	O
the	O
bootom	O
)	O
.	O

Trying	O
to	O
use	O
"	O
my	O
dateimeIndices	O
"	O
for	O
the	O
holidays	O
I	O
receive	O
an	O
index	O
out	O
of	O
bounds	O
.	O

Comments	O
are	O
not	O
for	O
extended	O
discussion	O
;	O
this	O
conversation	O
has	O
been	O
moved	O
to	O
chat	O
.	O

For	O
the	O
parallel	O
approach	O
this	O
is	O
the	O
answer	O
based	O
on	O
Parallelize	O
apply	B-API
after	O
pandas	O
groupby	B-API
:	O

but	O
I	O
prefer	O
@USER	O
'	O
s	O
approach	O
because	O
it	O
does	O
not	O
require	O
O	O
(	O
n	O
*	O
number_of_holidays	O
)	O

