Python	O
&	O
Pandas	O
:	O
How	O
to	O
return	O
a	O
copy	O
of	O
a	O
dataframe	B-API
?	O

Here	O
is	O
the	O
problem	O
.	O

I	O
use	O
a	O
function	O
to	O
return	O
a	O
randomized	O
data	O
,	O

However	O
,	O
the	O
`	O
df	O
`	O
(	O
source	O
data	O
)	O
and	O
the	O
`	O
temp_df	O
`	O
(	O
randomized_data	O
)	O
is	O
the	O
same	O
.	O

Here	O
is	O
the	O
result	O
:	O

How	O
can	O
I	O
make	O
the	O
`	O
temp_df	O
`	O
and	O
`	O
df	O
`	O
different	O
from	O
each	O
other	O
?	O

I	O
find	O
I	O
can	O
get	O
rid	O
of	O
the	O
problem	O
by	O
adding	O
`	O
df.copy()	B-API
`	O
at	O
the	O
beginning	O
of	O
the	O
function	O

But	O
I'm	O
not	O
sure	O
if	O
this	O
is	O
the	O
right	O
way	O
to	O
deal	O
with	O
it	O
?	O

Yes	O
.	O

It	O
is	O
.	O

So	O
...	O
probably	O
should	O
just	O
delete	O
this	O
question	O
because	O
`	O
df.copy()	B-API
`	O
is	O
the	O
answer	O
,	O
which	O
you're	O
already	O
doing	O
:P	O

@USER	O
is	O
it	O
possible	O
to	O
make	O
`	O
.copy()	B-API
`	O
a	O
default	O
option	O
in	O
custom	O
functions	O
?	O

I	O
feel	O
its	O
very	O
redundent	O
when	O
you	O
want	O
to	O
return	O
the	O
`	O
df	O
`	O
.	O

And	O
this	O
need	O
you	O
to	O
add	O
`	O
df	O
=d	O
f.copy()	O
`	O
a	O
lot	O
of	O
times	O
in	O
the	O
function	O
.	O

@USER	O
Or	O
,	O
am	O
I	O
using	O
it	O
wrong	O
?	O

Is	O
there	O
better	O
way	O
to	O
return	O
a	O
df	O
in	O
a	O
custom	O
function	O
?	O

You	O
should	O
either	O
a	O
)	O
call	O
your	O
function	O
like	O
`	O
do_something	O
(	O
df.copy()	B-API
)`	O
or	O
b	O
)	O
call	O
`	O
df	O
=	O
df.copy()	B-API
`	O
at	O
the	O
beginning	O
of	O
your	O
function	O
.	O

Use	O
`	O
DataFrame.assign()	B-API
`	O
:	O

I	O
think	O
you	O
are	O
right	O
,	O
and	O
DataFrame.copy()	B-API
have	O
an	O
optional	O
argument	O
'	O
deep	O
'	O
.	O

You	O
can	O
find	O
details	O
in	O
http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.copy.html	O

