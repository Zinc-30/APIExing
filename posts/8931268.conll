Using	O
Colormaps	O
to	O
set	O
color	O
of	O
line	O
in	O
matplotlib	O

How	O
does	O
one	O
set	O
the	O
color	O
of	O
a	O
line	O
in	O
matplotlib	O
with	O
scalar	O
values	O
provided	O
at	O
run	O
time	O
using	O
a	O
colormap	O
(	O
say	O
`	O
jet	O
`)	O
?	O

I	O
tried	O
a	O
couple	O
of	O
different	O
approaches	O
here	O
and	O
I	O
think	O
I'm	O
stumped	O
.	O

`	O
values	O
[	O
]`	O
is	O
a	O
storted	O
array	O
of	O
scalars	O
.	O
curves	O
are	O
a	O
set	O
of	O
1-d	O
arrays	O
,	O
and	O
labels	O
are	O
an	O
array	O
of	O
text	O
strings	O
.	O

Each	O
of	O
the	O
arrays	O
have	O
the	O
same	O
length	O
.	O

The	O
error	O
you	O
are	O
receiving	O
is	O
due	O
to	O
how	O
you	O
define	O
`	O
jet	O
`	O
.	O

You	O
are	O
creating	O
the	O
base	O
class	O
`	O
Colormap	O
`	O
with	O
the	O
name	O
'	O
jet	O
'	O
,	O
but	O
this	O
is	O
very	O
different	O
from	O
getting	O
the	O
default	O
definition	O
of	O
the	O
'	O
jet	O
'	O
colormap	O
.	O

This	O
base	O
class	O
should	O
never	O
be	O
created	O
directly	O
,	O
and	O
only	O
the	O
subclasses	O
should	O
be	O
instantiated	O
.	O

What	O
you've	O
found	O
with	O
your	O
example	O
is	O
a	O
buggy	O
behavior	O
in	O
Matplotlib	O
.	O

There	O
should	O
be	O
a	O
clearer	O
error	O
message	O
generated	O
when	O
this	O
code	O
is	O
run	O
.	O

This	O
is	O
an	O
updated	O
version	O
of	O
your	O
example	O
:	O

Resulting	O
in	O
:	O

Using	O
a	O
`	O
ScalarMappable	O
`	O
is	O
an	O
improvement	O
over	O
the	O
approach	O
presented	O
in	O
my	O
related	O
answer	O
:	O

creating	O
over	O
20	O
unique	O
legend	O
colors	O
using	O
matplotlib	O

I	O
thought	O
it	O
would	O
be	O
beneficial	O
to	O
include	O
what	O
I	O
consider	O
to	O
be	O
a	O
more	O
simple	O
method	O
using	O
numpy's	O
linspace	O
coupled	O
with	O
matplotlib's	O
cm-type	O
object	O
.	O

It's	O
possible	O
that	O
the	O
above	O
solution	O
is	O
for	O
an	O
older	O
version	O
.	O

I	O
am	O
using	O
the	O
python	O
3.4.3	O
,	O
matplotlib	O
1.4.3	O
,	O
and	O
numpy	O
1.9.3	O
.,	O
and	O
my	O
solution	O
is	O
as	O
follows	O
.	O

This	O
results	O
in	O
1000	O
uniquely-colored	O
lines	O
that	O
span	O
the	O
entire	O
cm.jet	O
colormap	O
as	O
pictured	O
below	O
.	O

If	O
you	O
run	O
this	O
script	O
you'll	O
find	O
that	O
you	O
can	O
zoom	O
in	O
on	O
the	O
individual	O
lines	O
.	O

cm.jet	O
between	O
0.0	O
and	O
1.0	O
with	O
1000	O
graduations	O

Now	O
say	O
I	O
want	O
my	O
1000	O
line	O
colors	O
to	O
just	O
span	O
the	O
greenish	O
portion	O
between	O
lines	O
400	O
to	O
600	O
.	O

I	O
simply	O
change	O
my	O
start	O
and	O
stop	O
values	O
to	O
0.4	O
and	O
0.6	O
and	O
this	O
results	O
in	O
using	O
only	O
20%	O
of	O
the	O
cm.jet	O
color	O
map	B-API
between	O
0.4	O
and	O
0.6	O
.	O

cm.jet	O
between	O
0.4	O
and	O
0.6	O
with	O
1000	O
graduations	O

So	O
in	O
a	O
one	O
line	O
summary	O
you	O
can	O
create	O
a	O
list	O
of	O
rgba	O
colors	O
from	O
a	O
matplotlib.cm	O
colormap	O
accordingly	O
:	O

In	O
this	O
case	O
I	O
use	O
the	O
commonly	O
invoked	O
map	B-API
named	O
jet	O
but	O
you	O
can	O
find	O
the	O
complete	O
list	O
of	O
colormaps	O
available	O
in	O
your	O
matplotlib	O
version	O
by	O
invoking	O
:	O

This	O
only	O
works	O
because	O
your	O
`	O
stop	O
`	O
is	O
1	O

Of	O
course	O
1	O
is	O
the	O
best	O
value	O
.	O

If	O
you	O
want	O
a	O
larger	O
range	O
of	O
colors	O
all	O
you	O
need	O
do	O
is	O
increase	O
`	O
number_of_lines	O
`	O
.	O

And	O
in	O
the	O
event	O
that	O
you	O
want	O
only	O
a	O
portion	O
of	O
the	O
colors	O
in	O
the	O
band	O
you	O
reduce	O
`	O
stop	O
`	O
and	O
increase	O
`	O
start	O
`	O
as	O
needed	O
.	O

A	O
combination	O
of	O
line	O
styles	O
,	O
markers	O
,	O
and	O
qualitative	O
colors	O
from	O
`	O
matplotlib	O
`	O
:	O

