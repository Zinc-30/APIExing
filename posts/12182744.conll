python	O
pandas	O
:	O
apply	B-API
a	O
function	O
with	O
arguments	O
to	O
a	O
series	O

I	O
want	O
to	O
apply	B-API
a	O
function	O
with	O
arguments	O
to	O
a	O
series	O
in	O
python	O
pandas	O
:	O

The	O
documentation	O
describes	O
support	O
for	O
an	O
apply	B-API
method	O
,	O
but	O
it	O
doesn't	O
accept	O
any	O
arguments	O
.	O

Is	O
there	O
a	O
different	O
method	O
that	O
accepts	O
arguments	O
?	O

Alternatively	O
,	O
am	O
I	O
missing	O
a	O
simple	O
workaround	O
?	O

Why	O
not	O
just	O
use	O
`	O
functools.partial	O
`	O
,	O
or	O
`	O
starmap	O
`	O
?	O

The	O
documentation	O
explains	O
this	O
clearly	O
.	O

The	O
apply	B-API
method	O
accepts	O
a	O
python	O
function	O
which	O
should	O
have	O
a	O
single	O
parameter	O
.	O

If	O
you	O
want	O
to	O
pass	O
more	O
parameters	O
you	O
should	O
use	O
`	O
functools.partial	O
`	O
as	O
suggested	O
by	O
Joel	O
Cornett	O
in	O
his	O
comment	O
.	O

An	O
example	O
:	O

You	O
can	O
also	O
pass	O
keyword	O
arguments	O
using	O
`	O
partial	O
`	O
.	O

Another	O
way	O
would	O
be	O
to	O
create	O
a	O
lambda	O
:	O

But	O
I	O
think	O
using	O
`	O
partial	O
`	O
is	O
better	O
.	O

Note	O
that	O
newer	O
versions	O
of	O
pandas	O
do	O
allow	O
you	O
to	O
pass	O
extra	O
arguments	O
(	O
see	O
the	O
new	O
documentation	O
)	O
.	O

So	O
now	O
you	O
can	O
do	O
:	O

The	O
positional	O
arguments	O
are	O
added	O
after	O
the	O
element	O
of	O
the	O
series	O
.	O

For	O
a	O
DataFrame	B-API
apply	B-API
method	O
accepts	O
`	O
args	O
`	O
argument	O
,	O
which	O
is	O
a	O
tuple	O
holding	O
additional	O
positional	O
arguments	O
or	O
**	O
kwds	O
for	O
named	O
ones	O
.	O

I	O
created	O
an	O
issue	O
to	O
have	O
this	O
also	O
for	O
Series.apply()	B-API
github.com/pydata/pandas/issues/1829	O

Feature	O
has	O
been	O
implemented	O
,	O
will	O
be	O
in	O
upcoming	O
pandas	O
release	O

do	O
we	O
have	O
a	O
pointer	O
now	O
to	O
the	O
aforementioned	O
feature	O
?	O

Thanks	O
!	O

Can	O
you	O
explain	O
why	O
args	O
=	O
(	O
arg1	O
,	O
)	O
needs	O
a	O
comma	O
after	O
the	O
first	O
argument	O
?	O

@USER	O
,	O
you	O
need	O
the	O
comma	O
in	O
order	O
for	O
Python	O
to	O
understand	O
the	O
parentheses	O
'	O
contents	O
to	O
be	O
a	O
tuple	O
of	O
length	O
1	O
.	O

@USER	O
Ah	O
,	O
hanks	O
!	O

What	O
about	O
putting	O
in	O
args	O
for	O
the	O
`	O
func	O
`	O
.	O

So	O
if	O
I	O
wish	O
to	O
apply	B-API
`	O
pd.Series.mean	B-API
(	O
axis=1	O
)`	O
how	O
do	O
I	O
put	O
in	O
the	O
`	O
axis=1	O
`	O
?	O

As	O
a	O
side	O
note	O
,	O
you	O
can	O
also	O
add	O
a	O
keyword	O
argument	O
without	O
using	O
the	O
args	O
parameter	O
(	O
e.g.	O
:	O
x	O
=	O
my_series.apply	O
(	O
my_function	O
,	O
keyword_arg=arg1	O
)	O
,	O
where	O
keyword_arg	O
is	O
among	O
the	O
input	O
parameters	O
of	O
my_function	O
)	O

Steps	O
:	O

Create	O
a	O
dataframe	B-API

Create	O
a	O
function	O

Use	O
the	O
named	O
arguments	O
of	O
the	O
function	O
in	O
the	O
apply	B-API
statement	O
.	O

Example	O

The	O
outcome	O
of	O
this	O
example	O
is	O
that	O
each	O
number	O
in	O
the	O
dataframe	B-API
will	O
be	O
added	O
to	O
the	O
number	O
9	O
.	O

Explanation	O
:	O

The	O
"	O
add	O
"	O
function	O
has	O
two	O
parameters	O
:	O
i1	O
,	O
i2	O
.	O

The	O
first	O
parameter	O
is	O
going	O
to	O
be	O
the	O
value	O
in	O
data	O
frame	O
and	O
the	O
second	O
is	O
whatever	O
we	O
pass	O
to	O
the	O
"	O
apply	B-API
"	O
function	O
.	O

In	O
this	O
case	O
,	O
we	O
are	O
passing	O
"	O
9	O
"	O
to	O
the	O
apply	B-API
function	O
using	O
the	O
keyword	O
argument	O
"	O
i2	O
"	O
.	O

