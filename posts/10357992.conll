How	O
to	O
generate	O
audio	O
from	O
a	O
numpy	O
array	O
?	O

I	O
want	O
to	O
create	O
"	O
heart	O
rate	O
monitor	O
"	O
effect	O
from	O
a	O
2D	O
array	O
in	O
numpy	O
and	O
want	O
the	O
tone	O
to	O
reflect	O
the	O
values	O
in	O
the	O
array	O
.	O

You	O
can	O
use	O
the	O
`	O
write	O
`	O
function	O
from	O
`	O
scipy.io.wavfile	O
`	O
to	O
create	O
a	O
wav	O
file	O
which	O
you	O
can	O
then	O
play	O
however	O
you	O
wish	O
.	O

Note	O
that	O
the	O
array	O
must	O
be	O
integers	O
,	O
so	O
if	O
you	O
have	O
floats	O
,	O
you	O
might	O
want	O
to	O
scale	O
them	O
appropriately	O
:	O

If	O
you	O
want	O
Python	O
to	O
actually	O
play	O
audio	O
,	O
then	O
this	O
page	O
provides	O
an	O
overview	O
of	O
some	O
of	O
the	O
packages	O
/	O
modules	O
.	O

Question	O
-	O
the	O
data	O
/	O
np.max	O
(	O
np.abs	O
(	O
data	O
))	O
-	O
am	O
I	O
right	O
that	O
this	O
is	O
normalising	O
to	O
1	O
/	O
-1	O
before	O
scaling	O
,	O
such	O
that	O
if	O
the	O
max	O
is	O
0.8	O
,	O
it	O
would	O
be	O
scaled	O
up	O
?	O

Yes	O
(	O
it	O
isn't	O
required	O
though	O
)	O
.	O

Thanks	O
.	O

Shouldn't	O
that	O
be	O
*	O
32768	O
?	O

It	O
is	O
a	O
signed	O
16	O
bit	O
.	O

It	O
should	O
probably	O
actually	O
be	O
32767	O
.	O

Fixed	O
,	O
thanks	O
.	O

For	O
the	O
people	O
coming	O
here	O
in	O
2016	O
scikits.audiolab	O
doesn't	O
really	O
seem	O
to	O
work	O
anymore	O
.	O

I	O
was	O
able	O
to	O
get	O
a	O
solution	O
using	O
sounddevice	O
.	O

I	O
actually	O
tried	O
and	O
scikits.audiolab	O
worked	O
on	O
my	O
Ubuntu	O
16.04	O
+	O
python	O
2.7	O
(	O
anaconda	O
4.1.1	O
)	O
.	O

I	O
just	O
needed	O
to	O
`	O
sudo	O
apt-get	O
install	O
libsndfile1-dev	O
`	O
.	O

And	O
on	O
the	O
other	O
hand	O
,	O
sounddevice	O
doesn't	O
work	O
for	O
me	O
:	O
nothing	O
is	O
played	O
when	O
I	O
replace	O
scikits.audiolab	O
with	O
sd	O
.	O

no	O
luck	O
with	O
python3	O
,	O
even	O
with	O
libsndfile1-dev	O
installed	O
,	O
better	O
luck	O
with	O
sounddevice	O

Thanks	O
,	O
works	O
perfectly	O
!	O

`	O
sd.play	O
(	O
data	O
,	O
fs	O
,	O
blocking=True	O
)`	O
to	O
make	O
the	O
program	O
wait	O
until	O
the	O
sound	O
is	O
played	O
.	O

In	O
addition	O
,	O
you	O
could	O
try	O
scikits.audiolab	O
.	O

It	O
features	O
file	O
IO	O
and	O
the	O
ability	O
to	O
'	O
play	O
'	O
arrays	O
.	O

Arrays	O
don't	O
have	O
to	O
be	O
integers	O
.	O

To	O
mimick	O
dbaupp's	O
example	O
:	O

scikits.audiolab	O
is	O
not	O
available	O
for	O
python	O
(	O
32	O
)	O
+Windows	O
(	O
64	O
)	O
+Hardware	O
(	O
64	O
)	O
bit	O
configuration	O
and	O
thus	O
I	O
guess	O
not	O
so	O
useful	O
to	O
me	O

It's	O
not	O
available	O
in	O
Python	O
3	O
,	O
and	O
it	O
has	O
been	O
a	O
long	O
time	O
since	O
last	O
update	O
.	O

I	O
had	O
some	O
problems	O
using	O
`	O
scikit.audiolabs	O
`	O
,	O
so	O
I	O
looked	O
for	O
another	O
options	O
for	O
this	O
task	O
.	O

I	O
came	O
up	O
with	O
sounddevice	O
,	O
which	O
seems	O
a	O
lot	O
more	O
up-to-date	O
.	O

I	O
have	O
not	O
checked	O
if	O
it	O
works	O
with	O
Python	O
3	O
.	O

A	O
simple	O
way	O
to	O
perform	O
what	O
you	O
want	O
is	O
this	O
:	O

It	O
works	O
fine	O
with	O
Python	O
3	O
.	O

If	O
you	O
use	O
the	O
above	O
code	O
in	O
a	O
script	O
,	O
you	O
should	O
make	O
sure	O
to	O
use	O
`	O
blocking=True	O
`	O
,	O
otherwise	O
the	O
script	O
will	O
exit	O
without	O
finishing	O
playback	O
.	O

I	O
did	O
that	O
,	O
in	O
fact	O
.	O

Updated	O
answer	O
.	O

Thanks	O
!	O

PyGame	O
has	O
the	O
module	O
`	O
pygame.sndarray	O
`	O
which	O
can	O
play	O
numpy	O
data	O
as	O
audio	O
.	O

The	O
other	O
answers	O
are	O
probably	O
better	O
,	O
as	O
PyGame	O
can	O
be	O
difficult	O
to	O
get	O
up	O
and	O
running	O
.	O

Then	O
again	O
,	O
scipy	O
and	O
numpy	O
come	O
with	O
their	O
own	O
difficulties	O
,	O
so	O
maybe	O
it	O
isn't	O
a	O
large	O
step	O
to	O
add	O
PyGame	O
into	O
the	O
mix	O
.	O

http://www.pygame.org/docs/ref/sndarray.html	O

If	O
you	O
are	O
using	O
Jupyter	O
,	O
the	O
best	O
option	O
is	O
:	O

Not	O
sure	O
of	O
the	O
particulars	O
of	O
how	O
you	O
would	O
produce	O
the	O
audio	O
from	O
the	O
array	O
,	O
but	O
I	O
have	O
found	O
mpg321	O
to	O
be	O
a	O
great	O
command-line	O
audio	O
player	O
,	O
and	O
could	O
potentially	O
work	O
for	O
you	O
.	O

I	O
use	O
it	O
as	O
my	O
player	O
of	O
choice	O
for	O
Anki	O
,	O
which	O
is	O
written	O
in	O
python	O
and	O
has	O
libraries	O
that	O
could	O
be	O
a	O
great	O
starting	O
place	O
for	O
interfacing	O
your	O
code	O
/	O
arrays	O
with	O
audio	O
.	O

Check	O
out	O
:	O

anki.sound.py	O

customPlayer.py	O

