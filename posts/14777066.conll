Matplotlib	O
discrete	O
colorbar	O

I	O
am	O
trying	O
to	O
make	O
a	O
discrete	O
colorbar	O
for	O
a	O
scatterplot	O
in	O
matplotlib	O

I	O
have	O
my	O
x	O
,	O
y	O
data	O
and	O
for	O
each	O
point	O
an	O
integer	O
tag	O
value	O
which	O
I	O
want	O
to	O
be	O
represented	O
with	O
a	O
unique	O
colour	O
,	O
e.g	O
.	O

typically	O
tag	O
will	O
be	O
an	O
integer	O
ranging	O
from	O
0-20	O
,	O
but	O
the	O
exact	O
range	O
may	O
change	O

so	O
far	O
I	O
have	O
just	O
used	O
the	O
default	O
settings	O
,	O
e.g	O
.	O

which	O
gives	O
a	O
continuous	O
range	O
of	O
colours	O
.	O

Ideally	O
i	O
would	O
like	O
a	O
set	O
of	O
n	O
discrete	O
colours	O
(	O
n=20	O
in	O
this	O
example	O
)	O
.	O

Even	O
better	O
would	O
be	O
to	O
get	O
a	O
tag	O
value	O
of	O
0	O
to	O
produce	O
a	O
gray	O
colour	O
and	O
1-20	O
be	O
colourful	O
.	O

I	O
have	O
found	O
some	O
'	O
cookbook	O
'	O
scripts	O
but	O
they	O
are	O
very	O
complicated	O
and	O
I	O
cannot	O
think	O
they	O
are	O
the	O
right	O
way	O
to	O
solve	O
a	O
seemingly	O
simple	O
problem	O

does	O
this	O
or	O
this	O
help	O
?	O

thanks	O
for	O
links	O
but	O
the	O
2nd	O
example	O
is	O
what	O
I	O
mean	O
about	O
hugely	O
overcomplicated	O
means	O
to	O
perform	O
a	O
(	O
seemingly	O
)	O
trivial	O
task	O
-	O
1st	O
link	O
is	O
useful	O

You	O
can	O
create	O
a	O
custom	O
discrete	O
colorbar	O
quite	O
easily	O
by	O
using	O
a	O
BoundaryNorm	O
as	O
normalizer	O
for	O
your	O
scatter	O
.	O

The	O
quirky	O
bit	O
(	O
in	O
my	O
method	O
)	O
is	O
making	O
0	O
showup	O
as	O
grey	O
.	O

For	O
images	O
i	O
often	O
use	O
the	O
cmap.set_bad()	O
and	O
convert	O
my	O
data	O
to	O
a	O
numpy	O
masked	O
array	O
.	O

That	O
would	O
be	O
much	O
easier	O
to	O
make	O
0	O
grey	O
,	O
but	O
i	O
couldnt	O
get	O
this	O
to	O
work	O
with	O
the	O
scatter	O
or	O
the	O
custom	O
cmap	O
.	O

As	O
an	O
alternative	O
you	O
can	O
make	O
your	O
own	O
cmap	O
from	O
scratch	O
,	O
or	O
read-out	O
an	O
existing	O
one	O
and	O
override	O
just	O
some	O
specific	O
entries	O
.	O

I	O
personally	O
think	O
that	O
with	O
20	O
different	O
colors	O
its	O
a	O
bit	O
hard	O
to	O
read	O
the	O
specific	O
value	O
,	O
but	O
thats	O
up	O
to	O
you	O
of	O
course	O
.	O

great	O
answer	O
-	O
i	O
think	O
that	O
would	O
have	O
taken	O
me	O
a	O
very	O
long	O
time	O
to	O
figure	O
out	O
from	O
the	O
online	O
docs	O
,	O
many	O
thanks	O

I'm	O
not	O
sure	O
if	O
this	O
is	O
allowed	O
,	O
but	O
could	O
you	O
look	O
at	O
my	O
question	O
here	O
?	O

You	O
could	O
follow	O
this	O
example	O
:	O

which	O
produces	O
the	O
following	O
image	O
:	O

cmap	O
=	O
cm.get_cmap	O
(	O
'	O
jet	O
'	O
,	O
20	O
)	O
then	O
scatter	O
(	O
x	O
,	O
y	O
,	O
c=tags	O
,	O
cmap=cmap	O
)	O
gets	O
me	O
part	O
way	O
there	O
-	O
its	O
very	O
difficult	O
to	O
find	O
useful	O
documentation	O
for	O
matplotlib	O

To	O
set	O
a	O
values	O
above	O
or	O
below	O
the	O
range	O
of	O
the	O
colormap	O
,	O
you'll	O
want	O
to	O
use	O
the	O
`	O
set_over	O
`	O
and	O
`	O
set_under	O
`	O
methods	O
of	O
the	O
colormap	O
.	O

If	O
you	O
want	O
to	O
flag	O
a	O
particular	O
value	O
,	O
mask	B-API
it	O
(	O
i.e.	O
create	O
a	O
masked	O
array	O
)	O
,	O
and	O
use	O
the	O
`	O
set_bad	O
`	O
method	O
.	O

(	O
Have	O
a	O
look	O
at	O
the	O
documentation	O
for	O
the	O
base	O
colormap	O
class	O
:	O
http://matplotlib.org/api/colors_api.html#matplotlib.colors.Colormap	O
)	O

It	O
sounds	O
like	O
you	O
want	O
something	O
like	O
this	O
:	O

thats	O
really	O
good	O
-	O
i	O
tried	O
using	O
set_under	O
but	O
hadn't	O
included	O
vmin	O
so	O
i	O
don't	O
think	O
it	O
was	O
doing	O
anything	O

The	O
above	O
answers	O
are	O
good	O
,	O
except	O
they	O
don't	O
have	O
proper	O
tick	O
placement	O
on	O
the	O
colorbar	O
.	O

I	O
like	O
having	O
the	O
ticks	O
in	O
the	O
middle	O
of	O
the	O
color	O
so	O
that	O
the	O
number	O
-	O
color	O
mapping	O
is	O
more	O
clear	O
.	O

You	O
can	O
solve	O
this	O
problem	O
by	O
changing	O
the	O
limits	O
of	O
the	O
matshow	O
call	O
:	O

I	O
agree	O
that	O
placing	O
the	O
tick	O
in	O
the	O
middle	O
of	O
the	O
corresponding	O
color	O
is	O
very	O
helpful	O
when	O
looking	O
at	O
discrete	O
data	O
.	O

Your	O
second	O
method	O
is	O
correct	O
.	O

However	O
,	O
your	O
first	O
method	O
is	O
,	O
in	O
general	O
,	O
wrong	O
:	O
you	O
are	O
labeling	O
the	O
ticks	O
with	O
values	O
that	O
are	O
inconsistent	O
with	O
their	O
placement	O
on	O
the	O
colorbar	O
.	O

`	O
set_ticklabels	O
(	O
...	O
)`	O
should	O
only	O
be	O
used	O
to	O
control	O
the	O
label	O
formatting	O
(	O
e.g.	O
decimal	O
number	O
,	O
etc	O
.	O
)	O
.	O

If	O
the	O
data	O
is	O
truly	O
discrete	O
,	O
you	O
may	O
not	O
notice	O
any	O
problems	O
.	O

If	O
there	O
is	O
noise	O
in	O
the	O
system	O
(	O
e.g.	O
2	O
-	O
1.9	O
)	O
,	O
this	O
inconsistent	O
labeling	O
will	O
result	O
in	O
a	O
misleading	O
and	O
incorrect	O
colorbar	O
.	O

E	O
.,	O
I	O
think	O
you	O
are	O
right	O
that	O
changing	O
the	O
limits	O
is	O
the	O
superior	O
solution	O
so	O
I	O
removed	O
the	O
other	O
one	O
--	O
though	O
neither	O
would	O
handle	O
"	O
noise	O
"	O
well	O
.	O

Some	O
adjustments	O
would	O
be	O
needed	O
for	O
handling	O
continuous	O
data	O
.	O

I	O
think	O
you'd	O
want	O
to	O
look	O
at	O
colors.ListedColormap	O
to	O
generate	O
your	O
colormap	O
,	O
or	O
if	O
you	O
just	O
need	O
a	O
static	O
colormap	O
I've	O
been	O
working	O
on	O
an	O
app	O
that	O
might	O
help	O
.	O

that	O
looks	O
cool	O
,	O
possibly	O
overkill	O
for	O
my	O
needs	O
-	O
could	O
you	O
suggest	O
a	O
way	O
of	O
tagging	O
a	O
gray	O
value	O
onto	O
an	O
existing	O
colormap	O
?	O

so	O
that	O
0	O
values	O
come	O
out	O
gray	O
and	O
the	O
others	O
come	O
out	O
as	O
colours	O
?	O

@USER	O
what	O
about	O
generating	O
an	O
RGB	O
array	O
color_list	O
based	O
on	O
your	O
y	O
values	O
and	O
passing	O
that	O
to	O
ListedColormap	O
?	O

You	O
can	O
tag	O
a	O
value	O
with	O
color_list	O
[	O
y	O
==	O
value_to_tag	O
]	O
=	O
gray_color	O
.	O

