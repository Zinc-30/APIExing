matplotlib savefig() plots different from show()
When I use ` show() ` to plot the graphs in ` X ` , the graphs looks very good . However when I start to use ` savefig() ` to generate large amount of graphs , the ` savefig() ` generated graphs
' font , lines , polygons all look smaller than the ` show() ` generated graph . My environment is Ubuntu and the backend for ` show() ` is ` Qt4Agg ` . How can I make the ` show() ` plot and the ` savefig() ` plot looks consistent ?
I hope you didn't install matplotlib from the repository because their version is awfully outdated .
That might just be the case .
` savefig ` specifies the DPI for the saved figure ( The default is 100 if it's not specified in your .matplotlibrc , have a look at the ` dpi ` kwarg to ` savefig ` ) . It doesn't inheret it from the DPI of the original figure .
The DPI affects the relative size of the text and width of the stroke on lines , etc . If you want things to look identical , then pass ` fig.dpi ` to ` fig.savefig ` .
E.g .
good to know but this does not solve the problem .
You render your matplotlib plots to different devices ( e.g. , on-screen via Quartz versus to to-file via pdf using different functions ( plot versus savefig ) whose parameters are nearly the same , yet the default values for those parameters are not the same for both functions .
Put another way , the savefig default parameters are different from the default display parameters .
Aligning them is simple if you do it in the matplotlib config file . The template file is included with the source package , and named matplotlibrc.template . If you did not create one when you installed matplotlib , you can get this template from the matplotlib source , or from the matplotlib website .
Once you have customized this file the way you want , rename it to matplotlibrc ( no extension ) and save it to the directory .matplotlib ( note the leading ' . ') which should be in your home directory .
The config parameters for saving figures begins at about line 314 in the supplied matplotlibrc.template ( first line before this section is : ### SAVING FIGURES ) .
In particular , you will want to look at these :
Below these lines are the settings for font type and various image format-specific parameters .
These same parameters for display , i.e. , PLT.show() , begin at about line 277 a in the matplotlibrc.template ( this section preceded with the line : ### FIGURE ):
As you can see by comparing the values of these two blocks of parameters , the default settings for the same figure attribute are different for savefig versus display ( show ) .
Changing these configuration does not match the font size and line width consistent between show() and savefig() still . Though I want to add that manually saving the chart from Qt Widget is OK . Only time it is not ok is using savefig()
@USER . -Michael Aye : thanks for the review + edits .
I have fixed this in my matplotlib source , but it's not a pretty fix . However , if you , like me , are very particular about how the graph looks , it's worth it .
The issue seems to be in the rendering backends ; they each get the correct values for linewidth , font size , etc ., but that comes out slightly larger when rendered as a PDF or PNG than when rendered with show() .
I added a few lines to the source for PNG generation , in the file matplotlib / backends / backend_agg.py . You could make similar changes for each backend you use , or find a way to make a more clever change in a single location ;)
Added to my matplotlib / backends / backend_agg.py file :
So that suits my needs for now , but , depending on what you're doing , you may want to implement similar changes in other methods . Or find a better way to do the same without so many line changes !
Update : After posting an issue to the matplotlib project at Github , I was able to track down the source of my problem : I had changed the figure.dpi setting in the matplotlibrc file . If that value is different than the default , my savefig() images come out different , even if I set the savefig dpi to be the same as the figure dpi . So , instead of changing the source as above , I just kept the figure.dpi setting as the default 80 , and was able to generate images with savefig() that looked like images from show() .
Leon , had you also changed that setting ?
Just added an issue here , in the hope that a better solution can be created : github.com/matplotlib/matplotlib/issues/786
Old question , but apparently Google likes it so I thought I put an answer down here after some research about this problem .
If you create a figure from scratch you can give it a size option while creation :
figsize ( width , height ) adjusts the absolute dimension of your plot and helps to make sure both plots look the same .
As stated in another answer the dpi option affects the relative size of the text and width of the stroke on lines , etc . Using the option dpi= fig.dpi makes sure the relative size of those are the same both for show() and savefig() .
Alternatively the figure size can be changed after creation with :
forward allows to change the size on the fly .
If you have trouble with too large borders in the created image you can adjust those either with :
or :
The first option just minimizes the layout and borders and the second option allows to manually adjust the borders a bit . These tips helped at least me to solve my problem of different savefig() and show() images .