pylab.ion()	O
in	O
python	O
2	O
,	O
matplotlib	O
1.1.1	O
and	O
updating	O
of	O
the	O
plot	O
while	O
the	O
program	O
runs	O

what	O
I	O
am	O
trying	O
to	O
do	O
is	O
having	O
a	O
script	O
compute	O
something	O
,	O
prepare	O
a	O
plot	O
and	O
show	O
the	O
already	O
obtained	O
results	O
as	O
a	O
pylab.figure	O
-	O
in	O
python	O
2	O
(	O
specifically	O
python	O
2.7	O
)	O
with	O
a	O
stable	O
matplotlib	O
(	O
which	O
is	O
1.1.1	O
)	O
.	O

In	O
python	O
3	O
(	O
python	O
3.2.3	O
with	O
a	O
matplotlib	O
git	O
build	O
...	O
version	O
1.2.x	O
)	O
,	O
this	O
works	O
fine	O
.	O

As	O
a	O
simple	O
example	O
(	O
simulating	O
a	O
lengthy	O
computation	O
by	O
time.sleep()	O
)	O
consider	O

In	O
python	O
2	O
(	O
version	O
2.7.3	O
vith	O
matplotlib	O
1.1.1	O
)	O
,	O
the	O
code	O
runs	O
cleanly	O
without	O
errors	O
but	O
does	O
not	O
show	O
the	O
figure	O
.	O

A	O
little	O
trial	O
and	O
error	O
with	O
the	O
python2	O
interpreter	O
seemed	O
to	O
suggest	O
to	O
replace	O
pylab.draw()	O
with	O
pylab.show()	O
;	O
doing	O
this	O
once	O
is	O
apparently	O
sufficient	O
(	O
not	O
,	O
as	O
with	O
draw	O
calling	O
it	O
after	O
every	O
change	O
/	O
addition	O
to	O
the	O
plot	O
)	O
.	O

Hence	O
:	O

However	O
,	O
this	O
doesn't	O
work	O
either	O
.	O

Again	O
,	O
it	O
runs	O
cleanly	O
but	O
does	O
not	O
show	O
the	O
figure	O
.	O

It	O
seems	O
to	O
do	O
so	O
only	O
when	O
waiting	O
for	O
user	O
input	O
.	O

It	O
is	O
not	O
clear	O
to	O
me	O
why	O
this	O
is	O
,	O
but	O
the	O
plot	O
is	O
finally	O
shown	O
when	O
a	O
raw_input()	O
is	O
added	O
to	O
the	O
loop	O

With	O
this	O
,	O
the	O
script	O
will	O
of	O
course	O
wait	O
for	O
user	O
input	O
while	O
showing	O
the	O
plot	O
and	O
will	O
not	O
continue	O
computing	O
the	O
data	O
before	O
the	O
user	O
hits	O
enter	O
.	O

This	O
was	O
,	O
of	O
course	O
,	O
not	O
the	O
intention	O
.	O

This	O
may	O
be	O
caused	O
by	O
different	O
versions	O
of	O
matplotlib	O
(	O
1.1.1	O
and	O
1.2.x	O
)	O
or	O
by	O
different	O
python	O
versions	O
(	O
2.7.3	O
and	O
3.2.3	O
)	O
.	O

Is	O
there	O
any	O
way	O
to	O
accomplish	O
with	O
python	O
2	O
with	O
a	O
stable	O
(	O
1.1.1	O
)	O
matplotlib	O
what	O
the	O
above	O
script	O
(	O
the	O
first	O
one	O
)	O
does	O
in	O
python	O
3	O
,	O
matplotlib	O
1.2.x	O
:	O

-	O
computing	O
data	O
(	O
which	O
takes	O
a	O
while	O
,	O
in	O
the	O
above	O
example	O
simulated	O
by	O
time.sleep()	O
)	O
in	O
a	O
loop	O
or	O
iterated	O
function	O
and	O

-	O
(	O
while	O
still	O
computing	O
)	O
showing	O
what	O
has	O
already	O
been	O
computed	O
in	O
previous	O
iterations	O

-	O
and	O
not	O
bothering	O
the	O
user	O
to	O
continually	O
hit	O
enter	O
for	O
the	O
computation	O
to	O
continue	O

Thanks	O
;	O
I'd	O
appreciate	O
any	O
help	O
...	O

You	O
want	O
the	O
`	O
pause	O
`	O
function	O
to	O
give	O
the	O
gui	O
framework	O
a	O
chance	O
to	O
re-draw	O
the	O
screen	O
:	O

You	O
don't	O
need	O
to	O
create	O
a	O
new	O
`	O
Line2D	O
`	O
object	O
every	O
pass	O
through	O
,	O
you	O
can	O
just	O
update	O
the	O
data	O
in	O
the	O
existing	O
one	O
.	O

Documentation	O
:	O

A	O
really	O
over-kill	O
method	O
to	O
is	O
to	O
use	O
the	O
`	O
matplotlib.animate	O
`	O
module	O
.	O

On	O
the	O
flip	O
side	O
,	O
it	O
gives	O
you	O
a	O
nice	O
way	O
to	O
save	O
the	O
data	O
if	O
you	O
want	O
(	O
ripped	O
from	O
my	O
answer	O
to	O
Python-	O
1	O
second	O
plots	O
continous	O
presentation	O
)	O
.	O

example	O
,	O
api	O
,	O
tutorial	O

Thanks	O
,	O
tcaswell	O
;	O
the	O
pause	O
function	O
solved	O
my	O
problem	O
.	O

Some	O
backends	O
(	O
in	O
my	O
experience	O
"	O
Qt4Agg	O
")	O
require	O
the	O
`	O
pause	O
`	O
function	O
,	O
as	O
@USER	O
suggested	O
.	O

Other	O
backends	O
(	O
in	O
my	O
experience	O
"	O
TkAgg	O
")	O
seem	O
to	O
just	O
update	O
on	O
`	O
draw()	O
`	O
without	O
requiring	O
a	O
`	O
pause	O
`	O
.	O

So	O
another	O
solution	O
is	O
to	O
switch	O
your	O
backend	O
,	O
for	O
example	O
with	O
`	O
matplotlib.use	O
(	O
'	O
TkAgg	O
')`	O
.	O

TkAgg	O
requires	O
a	O
pause	O
as	O
well	O
.	O

(	O
On	O
the	O
Mac	O
,	O
current	O
version	O
as	O
of	O
writing	O
)	O

