Saving	O
interactive	O
Matplotlib	O
figures	O

Is	O
there	O
a	O
way	O
to	O
save	O
a	O
Matplotlib	O
figure	O
such	O
that	O
it	O
can	O
be	O
re-opened	O
and	O
have	O
typical	O
interaction	O
restored	O
?	O

(	O
Like	O
the	O
.fig	O
format	O
in	O
MATLAB	O
?	O
)	O

I	O
find	O
myself	O
running	O
the	O
same	O
scripts	O
many	O
times	O
to	O
generate	O
these	O
interactive	O
figures	O
.	O

Or	O
I'm	O
sending	O
my	O
colleagues	O
multiple	O
static	O
PNG	O
files	O
to	O
show	O
different	O
aspects	O
of	O
a	O
plot	O
.	O

I'd	O
rather	O
send	O
the	O
figure	O
object	O
and	O
have	O
them	O
interact	O
with	O
it	O
themselves	O
.	O

This	O
would	O
be	O
a	O
great	O
feature	O
,	O
but	O
AFAIK	O
it	O
isn't	O
implemented	O
in	O
Matplotlib	O
and	O
likely	O
would	O
be	O
difficult	O
to	O
implement	O
yourself	O
due	O
to	O
the	O
way	O
figures	O
are	O
stored	O
.	O

I'd	O
suggest	O
either	O
(	O
a	O
)	O
separate	O
processing	O
the	O
data	O
from	O
generating	O
the	O
figure	O
(	O
which	O
saves	O
data	O
with	O
a	O
unique	O
name	O
)	O
and	O
write	O
a	O
figure	O
generating	O
script	O
(	O
loading	O
a	O
specified	O
file	O
of	O
the	O
saved	O
data	O
)	O
and	O
editing	O
as	O
you	O
see	O
fit	O
or	O
(	O
b	O
)	O
save	O
as	O
PDF	O
SVG	O
/	O
PostScript	O
format	O
and	O
edit	O
in	O
some	O
fancy	O
figure	O
editor	O
like	O
Adobe	O
Illustrator	O
(	O
or	O
Inkscape	O
)	O
.	O

Somewhat	O
surprised	O
this	O
isn't	O
implemented	O
..	O

But	O
ok	O
,	O
I'll	O
save	O
the	O
processed	O
data	O
in	O
an	O
intermediate	O
file	O
and	O
send	O
that	O
and	O
a	O
script	O
for	O
plotting	O
to	O
colleagues	O
.	O

Thanks	O
.	O

I	O
suspect	O
implementation	O
is	O
hard	O
,	O
which	O
is	O
why	O
it	O
works	O
so	O
poorly	O
an	O
MATLAB	O
.	O

Back	O
when	O
I	O
used	O
it	O
,	O
figures	O
used	O
to	O
crash	O
MATLAB	O
,	O
and	O
even	O
slightly	O
different	O
versions	O
were	O
not	O
able	O
to	O
read	O
each	O
others	O
.fig	O
files	O
.	O

`	O
pickle	O
`	O
now	O
works	O
on	O
MPL	O
figures	O
,	O
so	O
this	O
can	O
be	O
done	O
and	O
appears	O
to	O
work	O
reasonable	O
well	O
-	O
almost	O
like	O
a	O
Matlab	O
"	O
.fig	O
"	O
figure	O
file	O
.	O

See	O
my	O
answer	O
below	O
(	O
for	O
now	O
?	O
)	O
for	O
an	O
example	O
of	O
how	O
to	O
do	O
it	O
.	O

As	B-API
of	O
Matplotlib	O
1.2	O
,	O
we	O
now	O
have	O
experimental	O
pickle	O
support	O
.	O

Give	O
that	O
a	O
go	O
and	O
see	O
if	O
it	O
works	O
well	O
for	O
your	O
case	O
.	O

If	O
you	O
have	O
any	O
issues	O
,	O
please	O
let	O
us	O
know	O
on	O
the	O
Matplotlib	O
mailing	O
list	O
or	O
by	O
opening	O
an	O
issue	O
on	O
github.com/matplotlib/matplotlib	O
.	O

Any	O
reason	O
this	O
useful	O
feature	O
could	O
be	O
added	O
to	O
the	O
figure's	O
"	O
Save	O
as	O
"	O
itself	O
.	O

Adding	O
.pkl	O
perhaps	O
?	O

Good	O
idea	O
@USER	O
.	O

I'd	O
support	O
that	O
if	O
you	O
wanted	O
to	O
give	O
implementing	O
it	O
a	O
go	O
?	O

Does	O
this	O
only	O
work	O
on	O
a	O
subset	O
of	O
backends	O
?	O

When	O
I	O
try	O
to	O
pickle	O
a	O
simple	O
figure	O
in	O
OSX	O
,	O
I	O
get	O
`	O
PicklingError	O
:	O
Can't	O
pickle	O
type	O
'	O
_macosx.GraphicsContext	O
'	O
:	O
it's	O
not	O
found	O
as	O
_macosx.GraphicsContext	O
`	O
.	O

The	O
above	O
`	O
PicklingError	O
`	O
only	O
occurs	O
if	O
you	O
call	O
`	O
plt.show()	O
`	O
before	O
doing	O
the	O
pickle	O
.	O

So	O
just	O
place	O
`	O
plt.show()	O
`	O
after	O
`	O
pickle.dump()	O
`	O
.	O

On	O
my	O
py3.5	O
on	O
MacOS	O
10.11	O
,	O
the	O
order	O
of	O
`	O
fig.show()	O
`	O
doesn't	O
appear	O
to	O
matter	O
-	O
maybe	O
that	O
bug	O
was	O
fixed	O
.	O

I	O
can	O
pickle	O
before	O
/	O
after	O
`	O
show()	O
`	O
without	O
issue	O
.	O

I	O
just	O
found	O
out	O
how	O
to	O
do	O
this	O
.	O

The	O
"	O
experimental	O
pickle	O
support	O
"	O
mentioned	O
by	O
@USER	O
works	O
quite	O
well	O
.	O

Try	O
this	O
:	O

After	O
your	O
interactive	O
tweaking	O
,	O
save	O
the	O
figure	O
object	O
as	O
a	O
binary	O
file	O
:	O

Later	O
,	O
open	O
the	O
figure	O
and	O
the	O
tweaks	O
should	O
be	O
saved	O
and	O
GUI	O
interactivity	O
should	O
be	O
present	O
:	O

You	O
can	O
even	O
extract	O
the	O
data	O
from	O
the	O
plots	O
:	O

(	O
It	O
works	O
for	O
lines	O
,	O
pcolor	O
imshow	O
-	O
pcolormesh	O
works	O
with	O
some	O
tricks	O
to	O
reconstruct	O
the	O
flattened	O
data	O
.	O
)	O

I	O
got	O
the	O
excellent	O
tip	O
from	O
Saving	O
Matplotlib	O
Figures	O
Using	O
Pickle	O
.	O

I	O
believe	O
this	O
is	O
not	O
robust	O
to	O
version	O
changes	O
etc	O
.,	O
and	O
not	O
cross-compatible	O
between	O
py2.x	O
py3.x	O
.	O

Also	O
I	O
thought	O
the	O
`	O
pickle	O
`	O
documentation	O
stated	O
that	O
we	O
need	O
to	O
setup	O
the	O
environment	O
similarly	O
as	O
when	O
the	O
object	O
was	O
pickled	O
(	O
saved	O
)	O
,	O
but	O
I've	O
found	O
you	O
don't	O
need	O
to	O
`	O
import	O
matplotlib.pyplot	O
as	O
plt	O
`	O
when	O
unpickling	O
(	O
loading	O
)	O
-	O
it	O
saves	O
the	O
import	O
statements	O
in	O
the	O
pickled	O
file	O
.	O

Why	O
not	O
just	O
send	O
the	O
Python	O
script	O
?	O

MATLAB's	O
.fig	O
files	O
require	O
the	O
recipient	O
to	O
have	O
MATLAB	O
to	O
display	O
them	O
,	O
so	O
that's	O
about	O
equivalent	O
to	O
sending	O
a	O
Python	O
script	O
that	O
requires	O
Matplotlib	O
to	O
display	O
.	O

Alternatively	O
(	O
disclaimer	O
:	O
I	O
haven't	O
tried	O
this	O
yet	O
)	O
,	O
you	O
could	O
try	O
pickling	O
the	O
figure	O
:	O

Unfortunately	O
,	O
matplotlib	O
figures	O
aren't	O
pickleable	O
,	O
so	O
that	O
approach	O
won't	O
work	O
.	O

Behind	O
the	O
scenes	O
,	O
there	O
are	O
too	O
many	O
C	O
extensions	O
that	O
don't	O
support	O
pickling	O
.	O

I	O
completely	O
agree	O
on	O
just	O
sending	O
the	O
script	O
+	O
data	O
,	O
though	O
...	O

I	O
guess	O
I've	O
never	O
really	O
seen	O
the	O
point	O
of	O
matlab's	O
saved	O
.fig	O
'	O
s	O
,	O
so	O
I	O
never	O
used	O
them	O
.	O

Sending	O
someone	O
stand-alone	O
code	O
and	O
data	O
has	O
been	O
the	O
easiest	O
in	O
the	O
long	O
run	O
,	O
in	O
my	O
experience	O
,	O
anyway	O
.	O

Still	O
,	O
it	O
would	O
be	O
nice	O
if	O
matplotlib's	O
figure	O
objects	O
where	O
pickleable	O
.	O

Even	O
our	O
preprocessed	O
data	O
is	O
somewhat	O
large	O
and	O
the	O
plotting	O
procedure	O
is	O
complex	O
.	O

Looks	O
like	O
the	O
only	O
recourse	O
though	O
.	O
thanks	O
.	O

Figures	O
are	O
apparently	O
now	O
pickleable	O
-	O
it	O
works	O
quite	O
well	O
!	O

Example	O
below	O
.	O

The	O
benefit	O
to	O
pickle	O
is	O
that	O
you	O
don't	O
have	O
to	O
programmatically	O
adjust	O
all	O
the	O
figure	O
/	O
subplot	O
spacings	O
/	O
positions	O
.	O

You	O
can	O
use	O
the	O
MPL	O
plot's	O
GUI	O
to	O
make	O
the	O
figure	O
look	O
nice	O
etc	O
.,	O
then	O
save	O
the	O
`	O
MyPlot.fig.pickle	O
`	O
file	O
-	O
retaining	O
the	O
later	O
ability	O
to	O
adjust	O
the	O
plot	O
presentation	O
as	O
needed	O
.	O

This	O
is	O
also	O
what's	O
great	O
about	O
Matlab's	O
`	O
.fig	O
`	O
files	O
.	O

Especially	O
useful	O
when	O
you	O
need	O
to	O
change	O
the	O
size	O
/	O
aspect	O
ratio	O
of	O
a	O
fig	O
(	O
for	O
inserting	O
into	O
presentations	O
/	O
papers	O
)	O
.	O

Good	O
question	O
.	O

Here	O
is	O
the	O
doc	O
text	O
from	O
`	O
pylab.save	O
`	O
:	O

pylab	O
no	O
longer	O
provides	O
a	O
save	O
function	O
,	O
though	O
the	O
old	O
pylab	O

function	O
is	O
still	O
available	O
as	O
matplotlib.mlab.save	O
(	O
you	O
can	O
still	O

refer	O
to	O
it	O
in	O
pylab	O
as	O
"	O
mlab.save	O
")	O
.	O

However	O
,	O
for	O
plain	O
text	O

files	O
,	O
we	O
recommend	O
numpy.savetxt	O
.	O

For	O
saving	O
numpy	O
arrays	O
,	O

we	O
recommend	O
numpy.save	O
,	O
and	O
its	O
analog	O
numpy.load	O
,	O
which	O
are	O

available	O
in	O
pylab	O
as	O
np.save	O
and	O
np.load	O
.	O

This	O
saves	O
the	O
data	O
from	O
the	O
a	O
pylab	O
object	O
,	O
but	O
doesn't	O
allow	O
you	O
to	O
regenerate	O
the	O
figure	O
.	O

Correct	O
.	O

I	O
ought	O
to	O
clarify	O
that	O
the	O
answer	O
was	O
not	O
a	O
recommendation	O
to	O
use	O
`	O
pylab.save	O
`	O
.	O

In	O
fact	O
,	O
from	O
the	O
doc	O
text	O
,	O
it	O
appears	O
that	O
one	O
should	O
not	O
use	O
it	O
.	O

Is	O
there	O
any	O
external	O
method	O
to	O
send	O
a	O
3D	O
Figure	O
?	O

Possible	O
even	O
a	O
simple	O
GUI	O
to	O
exe	O
..	O

