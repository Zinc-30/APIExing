Pandas	O
:	O
Drop	O
consecutive	O
duplicates	O

What's	O
the	O
most	O
efficient	O
way	O
to	O
drop	O
only	O
consecutive	O
duplicates	O
in	O
pandas	O
?	O

drop_duplicates	B-API
gives	O
this	O
:	O

But	O
I	O
want	O
this	O
:	O

Use	O
shift	B-API
:	O

So	O
the	O
above	O
uses	O
boolean	O
critieria	O
,	O
we	O
compare	O
the	O
dataframe	B-API
against	O
the	O
dataframe	B-API
shifted	O
by	O
-1	O
rows	O
to	O
create	O
the	O
mask	B-API

Another	O
method	O
is	O
to	O
use	O
`	O
diff	B-API
`	O
:	O

But	O
this	O
is	O
slower	O
than	O
the	O
original	O
method	O
if	O
you	O
have	O
a	O
large	O
number	O
of	O
rows	O
.	O

Update	O

Thanks	O
to	O
Bjarke	O
Ebert	O
for	O
pointing	O
out	O
a	O
subtle	O
error	O
,	O
I	O
should	O
actually	O
use	O
`	O
shift	B-API
(	O
1	O
)`	O
or	O
just	O
`	O
shift()	B-API
`	O
as	O
the	O
default	O
is	O
a	O
period	O
of	O
1	O
,	O
this	O
returns	O
the	O
first	O
consecutive	O
value	O
:	O

Note	O
the	O
difference	O
in	O
index	O
values	O
,	O
thanks	O
@USER	O
!	O

I	O
had	O
the	O
same	O
problem	O
and	O
google'd	O
to	O
find	O
this	O
question	O
.	O

And	O
wow	O
,	O
what	O
a	O
nice	O
and	O
simple	O
solution	O
!	O

:-D	O

but	O
hm	O
,	O
you	O
may	O
want	O
to	O
say	O
a.loc	O
[	O
a.shift	O
(	O
1	O
)	O
!	O
=	O
a	O
]	O
,	O
in	O
order	O
to	O
get	O
the	O
first	O
of	O
the	O
consecutive	O
values	O
,	O
as	O
specified	O
in	O
the	O
question	O
:-)	O

@USER	O
no	O
worries	O
,	O
glad	O
to	O
help	O
,	O
I	O
noted	O
your	O
comment	O
and	O
you	O
are	O
correct	O
,	O
the	O
resulting	O
row	O
values	O
was	O
what	O
the	O
OP	O
wanted	O
but	O
the	O
index	O
values	O
were	O
the	O
wrong	O
rows	O
as	O
you	O
correctly	O
potined	O
out	O
,	O
interestingly	O
using	O
`	O
diff	B-API
`	O
was	O
slower	O
for	O
a	O
50k	O
series	O
,	O
probably	O
due	O
to	O
the	O
value	O
comparison	O

Also	O
,	O
`	O
df.col	O
!	O

=	O
df.col.shift()	O
`	O
is	O
much	O
more	O
general	O
.	O

Using	O
`	O
diff	B-API
`	O
only	O
works	O
for	O
integers	O
whereas	O
`	O
shift	B-API
`	O
works	O
for	O
floats	O
,	O
strings	O
,	O
etc	O
.	O

@USER	O
You'd	O
have	O
to	O
do	O
`	O
a.loc	O
[(	O
a.notnull()	O
)	O
(	O
a.shift()	O
!	O
=	O
a	O
)]`	O
to	O
handle	O
the	O
`	O
NaN	O
`	O
rows	O

Here	O
is	O
an	O
update	O
that	O
will	O
make	O
it	O
work	O
with	O
multiple	O
columns	O
.	O

Use	O
"	O
.any	B-API
(	O
axis=1	O
)"	O
to	O
combine	O
the	O
results	O
from	O
each	O
column	O
:	O

this	O
seem	O
to	O
cause	O
a	O
KeyError	O

Can	O
you	O
add	O
a	O
bit	O
more	O
context	O
?	O

