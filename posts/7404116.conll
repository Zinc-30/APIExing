Defining	O
the	O
midpoint	O
of	O
a	O
colormap	O
in	O
matplotlib	O

I	O
want	O
to	O
set	O
the	O
middle	O
point	O
of	O
a	O
colormap	O
,	O
ie	O
my	O
data	O
goes	O
from	O
-5	O
to	O
10	O
,	O
i	O
want	O
zero	O
to	O
be	O
the	O
middle	O
.	O

I	O
think	O
the	O
way	O
to	O
do	O
it	O
is	O
subclassing	O
normalize	B-API
and	O
using	O
the	O
norm	O
,	O
but	O
i	O
didn't	O
find	O
any	O
example	O
and	O
it	O
is	O
not	O
clear	O
to	O
me	O
,	O
what	O
exactly	O
i	O
have	O
to	O
implement	O
.	O

this	O
is	O
called	O
a	O
"	O
diverging	O
"	O
or	O
"	O
bipolar	O
"	O
colormap	O
,	O
where	O
the	O
center	O
point	O
of	O
the	O
map	B-API
is	O
important	O
and	O
the	O
data	O
goes	O
above	O
and	O
below	O
this	O
point	O
.	O
sandia.gov/~kmorel/documents/ColorMaps	O

I	O
know	O
this	O
is	O
late	O
to	O
the	O
game	O
,	O
but	O
I	O
just	O
went	O
through	O
this	O
process	O
and	O
came	O
up	O
with	O
a	O
solution	O
that	O
perhaps	O
less	O
robust	O
than	O
subclassing	O
normalize	B-API
,	O
but	O
much	O
simpler	O
.	O

I	O
thought	O
it'd	O
be	O
good	O
to	O
share	O
it	O
here	O
for	O
posterity	O
.	O

The	O
function	O

An	O
example	O

Results	O
of	O
the	O
example	O
:	O

This	O
should	O
be	O
add	O
to	O
matplotlib	O
!	O

This	O
is	O
better	O
than	O
my	O
own	O
solution	O
,	O
thanks	O
!	O

Many	O
thanks	O
for	O
your	O
awesome	O
contribution	O
!	O

However	O
,	O
the	O
code	O
was	O
not	O
capable	O
of	O
both	O
cropping	O
and	O
shifting	O
the	O
same	O
color	O
map	B-API
,	O
and	O
your	O
instructions	O
were	O
a	O
bit	O
imprecise	O
and	O
misleading	O
.	O

I	O
have	O
now	O
fixed	O
that	O
and	O
took	O
the	O
liberty	O
to	O
edit	O
your	O
post	O
.	O

Also	O
,	O
I	O
have	O
included	O
it	O
in	O
one	O
of	O
my	O
personal	O
libraries	O
,	O
and	O
added	O
you	O
as	O
an	O
author	O
.	O

I	O
hope	O
you	O
do	O
not	O
mind	O
.	O

@USER	O
the	O
colormap	O
in	O
the	O
lower	O
right	O
corner	O
has	O
been	O
both	O
cropped	O
and	O
recentered	O
.	O

Feel	O
free	O
to	O
use	O
this	O
as	O
you	O
see	O
fit	O
.	O

Yes	O
,	O
it	O
has	O
,	O
sadly	O
it	O
only	O
looks	O
approximately	O
right	O
as	O
a	O
coincidence	O
.	O

If	O
`	O
start	O
`	O
and	O
`	O
stop	O
`	O
are	O
not	O
0	O
and	O
1	O
respectively	O
,	O
after	O
you	O
do	O
`	O
reg_index	O
=	O
np.linspace	O
(	O
start	O
,	O
stop	O
,	O
257	O
)`	O
,	O
you	O
can	O
no	O
longer	O
assume	O
that	O
value	O
129	O
is	O
the	O
midpoint	O
of	O
the	O
original	O
cmap	O
,	O
therefore	O
the	O
entire	O
rescaling	O
makes	O
no	O
sense	O
whenever	O
you	O
crop	O
.	O

Also	O
,	O
`	O
start	O
`	O
should	O
be	O
from	O
0	O
to	O
0.5	O
and	O
`	O
stop	O
`	O
from	O
0.5	O
to	O
1	O
,	O
not	O
both	O
from	O
0	O
to	O
1	O
as	O
you	O
instruct	O
.	O

Here	O
is	O
a	O
solution	O
subclassing	O
Normalize	B-API
.	O

To	O
use	O
it	O

Here	O
is	O
the	O
Class	O
:	O

Is	O
it	O
possible	O
to	O
use	O
this	O
class	O
in	O
addition	O
to	O
log	O
or	O
sym-log	O
scaling	O
without	O
having	O
to	O
create	O
more	O
sub-classes	O
?	O

My	O
current	O
use	O
case	O
already	O
uses	O
"	O
norm=SymLogNorm	O
(	O
linthresh=1	O
)"	O

It's	O
easiest	O
to	O
just	O
use	O
the	O
`	O
vmin	O
`	O
and	O
`	O
vmax	O
`	O
arguments	O
to	O
`	O
imshow	O
`	O
(	O
assuming	O
you're	O
working	O
with	O
image	O
data	O
)	O
rather	O
than	O
subclassing	O
`	O
matplotlib.colors.Normalize	O
`	O
.	O

E.g	O
.	O

Is	O
it	O
possible	O
to	O
have	O
the	O
example	O
updated	O
to	O
a	O
gaussian	O
curve	O
so	O
we	O
can	O
better	O
see	O
the	O
gradation	O
of	O
the	O
color	O
?	O

I	O
don't	O
like	O
this	O
solution	O
,	O
because	O
it	O
doesn't	O
use	O
the	O
full	O
dynamic	O
range	O
of	O
available	O
colors	O
.	O

Also	O
i	O
would	O
like	O
to	O
a	O
example	O
of	O
normalize	B-API
to	O
build	O
a	O
symlog-kind	O
of	O
normalization	O
.	O

@USER	O
-	O
I'm	O
confused	O
,	O
then	O
...	O

You	O
can't	O
use	O
the	O
full	O
dynamic	O
range	O
of	O
the	O
colorbar	O
if	O
you	O
want	O
0	O
in	O
the	O
middle	O
,	O
right	O
?	O

You're	O
wanting	O
a	O
non-linear	O
scale	O
then	O
?	O

One	O
scale	O
for	O
values	O
above	O
0	O
,	O
one	O
for	O
values	O
below	O
?	O

In	O
that	O
case	O
,	O
yeah	O
,	O
you'll	O
need	O
to	O
subclass	O
`	O
Normalize	B-API
`	O
.	O

I'll	O
add	O
an	O
example	O
in	O
just	O
a	O
bit	O
(	O
assuming	O
someone	O
else	O
doesn't	O
beat	O
me	O
to	O
it	O
...	O
)	O
.	O

@USER	O
:	O
You	O
are	O
right	O
,	O
it	O
is	O
not	O
linear	O
(	O
more	O
exactly	O
,	O
two	O
linear	O
parts	O
)	O
.	O

Using	O
vmin	O
/	O
vmax	O
,	O
the	O
colorange	O
for	O
the	O
values	O
smaller	O
than	O
-5	O
is	O
not	O
used	O
(	O
which	O
makes	O
sense	O
in	O
some	O
applications	O
,	O
but	O
not	O
mine	O
.	O
)	O
.	O

for	O
generic	O
data	O
in	O
Z	O
:	O
`	O
vmax=abs	O
(	O
Z	O
)	O
.max()	B-API
,	O
vmin=-abs	O
(	O
Z	O
)	O
.max()	B-API
`	O

Not	O
sure	O
if	O
you	O
are	O
still	O
looking	O
for	O
an	O
answer	O
.	O

For	O
me	O
,	O
trying	O
to	O
subclass	O
`	O
Normalize	B-API
`	O
was	O
unsuccessful	O
.	O

So	O
I	O
focused	O
on	O
manually	O
creating	O
a	O
new	O
data	O
set	O
,	O
ticks	O
and	O
tick-labels	O
to	O
get	O
the	O
effect	O
I	O
think	O
you	O
are	O
aiming	O
for	O
.	O

I	O
found	O
the	O
`	O
scale	O
`	O
module	O
in	O
matplotlib	O
that	O
has	O
a	O
class	O
used	O
to	O
transform	B-API
line	O
plots	O
by	O
the	O
'	O
syslog	O
'	O
rules	O
,	O
so	O
I	O
use	O
that	O
to	O
transform	B-API
the	O
data	O
.	O

Then	O
I	O
scale	O
the	O
data	O
so	O
that	O
it	O
goes	O
from	O
0	O
to	O
1	O
(	O
what	O
`	O
Normalize	B-API
`	O
usually	O
does	O
)	O
,	O
but	O
I	O
scale	O
the	O
positive	O
numbers	O
differently	O
from	O
the	O
negative	O
numbers	O
.	O

This	O
is	O
because	O
your	O
vmax	O
and	O
vmin	O
might	O
not	O
be	O
the	O
same	O
,	O
so	O
.5	O
-	O
1	O
might	O
cover	O
a	O
larger	O
positive	O
range	O
than	O
.5	O
-	O
0	O
,	O
the	O
negative	O
range	O
does	O
.	O

It	O
was	O
easier	O
for	O
me	O
to	O
create	O
a	O
routine	O
to	O
calculate	O
the	O
tick	O
and	O
label	O
values	O
.	O

Below	O
is	O
the	O
code	O
and	O
an	O
example	O
figure	O
.	O

Feel	O
free	O
to	O
adjust	O
the	O
"	O
constants	O
"	O
(	O
eg	O
`	O
VMAX	O
`)	O
at	O
the	O
top	O
of	O
the	O
script	O
to	O
confirm	O
that	O
it	O
behaves	O
well	O
.	O

Thanks	O
for	O
you	O
suggestion	O
,	O
as	O
seen	O
below	O
,	O
i	O
had	O
success	O
in	O
subclassing	O
.	O

But	O
your	O
code	O
is	O
still	O
very	O
useful	O
for	O
making	O
the	O
ticklabels	O
right	O
.	O

If	O
you	O
don't	O
mind	O
working	O
out	O
the	O
ratio	O
between	O
vmin	O
,	O
vmax	O
,	O
and	O
zero	O
,	O
this	O
is	O
a	O
pretty	O
basic	O
linear	O
map	B-API
from	O
blue	O
to	O
white	O
to	O
red	O
,	O
that	O
sets	O
white	O
according	O
to	O
the	O
ratio	O
`	O
z	O
`	O
:	O

The	O
cdict	O
format	O
is	O
fairly	O
simple	O
:	O
the	O
rows	O
are	O
points	O
in	O
the	O
gradient	O
that	O
gets	O
created	O
:	O
the	O
first	O
entry	O
is	O
the	O
x-value	O
(	O
the	O
ratio	O
along	O
the	O
gradient	O
from	O
0	O
to	O
1	O
)	O
,	O
the	O
second	O
is	O
the	O
end	O
value	O
for	O
the	O
previous	O
segment	O
,	O
and	O
the	O
third	O
is	O
the	O
start	O
value	O
for	O
the	O
next	O
segment	O
-	O
if	O
you	O
want	O
smooth	O
gradients	O
,	O
the	O
latter	O
two	O
are	O
always	O
the	O
same	O
.	O

See	O
the	O
docs	O
for	O
more	O
detail	O
.	O

There	O
is	O
also	O
the	O
option	O
to	O
specify	O
within	O
the	O
`	O
LinearSegmentedColormap.from_list()	O
`	O
tuples	O
`	O
(	O
val	O
,	O
color	O
)`	O
and	O
pass	O
them	O
as	O
list	O
to	O
the	O
`	O
color	O
`	O
argument	O
of	O
this	O
method	O
where	O
`	O
val0=0	O
val1	O
...	O

valN	O
==	O
1	O
`	O
.	O

I	O
had	O
a	O
similar	O
problem	O
,	O
but	O
I	O
wanted	O
the	O
highest	O
value	O
to	O
be	O
full	O
red	O
and	O
cut	B-API
off	O
low	O
values	O
of	O
blue	O
,	O
making	O
it	O
look	O
essentially	O
like	O
the	O
bottom	O
of	O
the	O
colorbar	O
was	O
chopped	O
off	O
.	O

This	O
worked	O
for	O
me	O
(	O
includes	O
optional	O
transparency	O
):	O

I	O
was	O
using	O
the	O
excellent	O
answer	O
from	O
Paul	O
H	O
,	O
but	O
ran	O
into	O
an	O
issue	O
because	O
some	O
of	O
my	O
data	O
ranged	O
from	O
negative	O
to	O
positive	O
,	O
while	O
other	O
sets	O
ranged	O
from	O
0	O
to	O
positive	O
or	O
from	O
negative	O
to	O
0	O
;	O
in	O
either	O
case	O
I	O
wanted	O
0	O
to	O
be	O
coloured	O
as	O
white	O
(	O
the	O
midpoint	O
of	O
the	O
colormap	O
I'm	O
using	O
)	O
.	O

With	O
the	O
existing	O
implementation	O
,	O
if	O
your	O
`	O
midpoint	O
`	O
value	O
is	O
equal	O
to	O
1	O
or	O
0	O
,	O
the	O
original	O
mappings	O
were	O
not	O
being	O
overwritten	O
.	O

You	O
can	O
see	O
that	O
in	O
the	O
following	O
picture	O
:	O

The	O
3rd	O
column	O
looks	O
correct	O
,	O
but	O
the	O
dark	O
blue	O
area	O
in	O
the	O
2nd	O
column	O
and	O
the	O
dark	O
red	O
area	O
in	O
the	O
remaining	O
columns	O
are	O
all	O
supposed	O
to	O
be	O
white	O
(	O
their	O
data	O
values	O
are	O
in	O
fact	O
0	O
)	O
.	O

Using	O
my	O
fix	O
gives	O
me	O
:	O

My	O
function	O
is	O
essentially	O
the	O
same	O
as	O
that	O
from	O
Paul	O
H	O
,	O
with	O
my	O
edits	O
at	O
the	O
start	O
of	O
the	O
`	O
for	O
`	O
loop	O
:	O

EDIT	O
:	O
I	O
ran	O
into	O
a	O
similar	O
issue	O
yet	O
again	O
when	O
some	O
of	O
my	O
data	O
ranged	O
from	O
a	O
small	O
positive	O
value	O
to	O
a	O
larger	O
positive	O
value	O
,	O
where	O
the	O
very	O
low	O
values	O
were	O
being	O
coloured	O
red	O
instead	O
of	O
white	O
.	O

I	O
fixed	O
it	O
by	O
adding	O
line	O
`	O
Edit	O
#2	O
`	O
in	O
the	O
code	O
above	O
.	O

