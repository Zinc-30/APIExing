import	O
module	O
from	O
string	O
variable	O

I'm	O
working	O
on	O
a	O
documentation	O
(	O
personal	O
)	O
for	O
nested	O
matplotlib	O
(	O
MPL	O
)	O
library	O
,	O
which	O
differs	O
from	O
MPL	O
own	O
provided	O
,	O
by	O
interested	O
submodule	O
packages	O
.	O

I'm	O
writing	O
Python	O
script	O
which	O
I	O
hope	O
will	O
automate	O
document	O
generation	O
from	O
future	O
MPL	O
releases	O
.	O

I	O
selected	O
interested	O
submodules	O
/	O
packages	O
and	O
want	O
to	O
list	O
their	O
main	O
classes	O
from	O
which	O
I'll	O
generate	O
list	O
and	O
process	O
it	O
with	O
`	O
pydoc	O
`	O

Problem	O
is	O
that	O
I	O
can't	O
find	O
a	O
way	O
to	O
instruct	O
Python	O
to	O
load	O
submodule	O
from	O
string	O
.	O

Here	O
is	O
example	O
of	O
what	O
I	O
tried	O
:	O

.	O

.	O

And	O
here	O
is	O
3	O
way	O
comparison	O
of	O
above	O
lists	O
through	O
pprint	O
:	O

I	O
don't	O
understand	O
what's	O
loaded	O
in	O
`	O
y	O
`	O
object	O
-	O
it's	O
base	O
`	O
matplotlib	O
`	O
plus	O
something	O
else	O
,	O
but	O
it	O
lack	O
information	O
that	O
I	O
wanted	O
and	O
that	O
is	O
main	O
classes	O
from	O
`	O
matplotlib.text	O
`	O
package	O
.	O

It's	O
top	O
blue	O
coloured	O
part	O
on	O
screenshot	O
(	O
`	O
x	O
`	O
list	O
)	O

Please	O
don't	O
suggest	O
Sphinx	O
as	O
different	O
approach	O
.	O

Can	O
you	O
explain	O
why	O
you	O
need	O
to	O
use	O
`	O
__import__	O
(	O
str	O
)`	O
rather	O
than	O
the	O
standard	O
`	O
import	O
`	O
statemetn	O
?	O

It's	O
because	O
I'll	O
process	O
lists	O
which	O
items	O
are	O
MPL	O
submodules	O
and	O
get	O
their	O
methods	O
paths	O

@USER	O
-	O
c'mon	O
-	O
there	O
are	O
endless	O
ideas	O
where	O
you'd	O
want	O
this	O
functionality	O
.	O

When	O
you	O
have	O
a	O
textual	O
configuration	O
of	O
libraries	O
,	O
you	O
can	O
load	O
them	O
by	O
name	O
,	O
which	O
wouldn't	O
quite	O
work	O
with	O
the	O
`	O
import	O
`	O
statement	O
.	O

Here's	O
one	O
example	O
of	O
use	O
:	O
djangosnippets.org/snippets/3048	O

The	O
`	O
__import__	O
`	O
function	O
can	O
be	O
a	O
bit	O
hard	O
to	O
understand	O
.	O

If	O
you	O
change	O

to	O

then	O
`	O
i	O
`	O
will	O
refer	O
to	O
`	O
matplotlib.text	O
`	O
.	O

In	O
Python	O
2.7	O
and	O
Python	O
3.1	O
or	O
later	O
,	O
you	O
can	O
use	O
`	O
importlib	O
`	O
:	O

Some	O
notes	O

If	O
you're	O
trying	O
to	O
import	O
something	O
from	O
a	O
sub-folder	O
e.g.	O
`	O
.	O

/	O
feature	O
/	O
email.py	O
`	O
,	O
the	O
code	O
will	O
look	O
like	O
`	O
importlib.import_module	O
(	O
"	O
feature.email	O
")`	O

You	O
can't	O
import	O
anything	O
if	O
there	O
is	O
no	O
`	O
__init__.py	O
`	O
in	O
the	O
folder	O
with	O
file	O
you	O
are	O
trying	O
to	O
import	O

`	O
importlib	O
`	O
should	O
be	O
avaliable	O
on	O
pypi	O
for	O
python2.7	O

Yes	O
,	O
it	O
is	O
:	O
pypi.python.org/pypi/importlib	O
.	O

For	O
anyone	O
who's	O
coming	O
here	O
from	O
Google	O
.	O

It	O
should	O
be	O
noted	O
that	O
if	O
you're	O
trying	O
to	O
import	O
something	O
from	O
a	O
sub-folder	O
(	O
for	O
example	O
,	O
`	O
.	O
/	O
feature	O
/	O
email.py	O
`)	O
the	O
code	O
will	O
look	O
like	O
`	O
importlib.import_module	O
(	O
"	O
feature.email	O
")`	O

Finally	O
,	O
also	O
remember	O
that	O
you	O
can't	O
import	O
anything	O
if	O
there	O
is	O
no	O
`	O
__init__.py	O
`	O
in	O
the	O
folder	O
with	O
file	O
you	O
are	O
trying	O
to	O
import	O
.	O

@USER	O
This	O
is	O
for	O
`	O
import	O
moduleName	O
`	O
where	O
moduleName	O
is	O
string	O
.	O

How	O
about	O
`	O
from	O
moduleName	O
import	O
*	O
`	O
?	O

I	O
think	O
importlib.import_module	O
is	O
what	O
you	O
are	O
looking	O
for	O
.	O

(	O
Only	O
available	O
for	O
Python	O
=	O
2.7	O
or	O
3.x	O
):	O

An	O
alternative	O
is	O
`	O
imp.load_source	O
(	O
..	O
)`	O
using	O
the	O
`	O
imp	O
`	O
module	O
as	O
suggested	O
in	O
this	O
answer	O
stackoverflow.com/questions/67631	O

@USER	O
This	O
is	O
for	O
`	O
import	O
moduleName	O
`	O
where	O
moduleName	O
is	O
string	O
.	O

How	O
about	O
`	O
from	O
moduleName	O
import	O
*	O
`	O
?	O

spent	O
some	O
time	O
trying	O
to	O
import	O
modules	O
from	O
a	O
list	O
,	O
and	O
this	O
is	O
the	O
thread	O
that	O
got	O
me	O
most	O
of	O
the	O
way	O
there	O
-	O
but	O
I	O
didnt	O
grasp	O
the	O
use	O
of	O
___import____	O
-	O

so	O
here's	O
how	O
to	O
import	O
a	O
module	O
from	O
a	O
string	O
,	O
and	O
get	O
the	O
same	O
behavior	O
as	O
just	O
import	O
.	O

And	O
try	O
/	O
except	O
the	O
error	O
case	O
,	O
too	O
.	O

:)	O

and	O
yes	O
,	O
for	O
python	O
2.7	O
you	O
have	O
other	O
options	O
-	O
but	O
for	O
2.6	O
,	O
this	O
works	O
.	O

