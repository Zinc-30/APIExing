How	O
to	O
update	O
a	O
plot	O
in	O
matplotlib	O
?	O

I'm	O
having	O
issues	O
with	O
redrawing	O
the	O
figure	O
here	O
.	O

I	O
allow	O
the	O
user	O
to	O
specify	O
the	O
units	O
in	O
the	O
time	O
scale	O
(	O
x-axis	O
)	O
and	O
then	O
I	O
recalculate	O
and	O
call	O
this	O
function	O
`	O
plots()	O
`	O
.	O

I	O
want	O
the	O
plot	O
to	O
simply	O
update	O
,	O
not	O
append	B-API
another	O
plot	O
to	O
the	O
figure	O
.	O

Possible	O
duplicate	O
of	O
real-time	O
plotting	O
in	O
while	O
loop	O
with	O
matplotlib	O

You	O
essentially	O
have	O
two	O
options	O
:	O

Do	O
exactly	O
what	O
you're	O
currently	O
doing	O
,	O
but	O
call	O
`	O
graph1.clear()	O
`	O
and	O
`	O
graph2.clear()	O
`	O
before	O
replotting	O
the	O
data	O
.	O

This	O
is	O
the	O
slowest	O
,	O
but	O
most	O
simplest	O
and	O
most	O
robust	O
option	O
.	O

Instead	O
of	O
replotting	O
,	O
you	O
can	O
just	O
update	O
the	O
data	O
of	O
the	O
plot	O
objects	O
.	O

You'll	O
need	O
to	O
make	O
some	O
changes	O
in	O
your	O
code	O
,	O
but	O
this	O
should	O
be	O
much	O
,	O
much	O
faster	O
than	O
replotting	O
things	O
every	O
time	O
.	O

However	O
,	O
the	O
shape	O
of	O
the	O
data	O
that	O
you're	O
plotting	O
can't	O
change	O
,	O
and	O
if	O
the	O
range	O
of	O
your	O
data	O
is	O
changing	O
,	O
you'll	O
need	O
to	O
manually	O
reset	O
the	O
x	O
and	O
y	O
axis	O
limits	O
.	O

To	O
give	O
an	O
example	O
of	O
the	O
second	O
option	O
:	O

I	O
tried	O
testing	O
"	O
1	O
.	O

"	O
and	O
the	O
result	O
was	O
,	O
after	O
I	O
replotted	O
the	O
data	O
another	O
set	O
of	O
plots	O
were	O
drawn	O
in	O
my	O
GUI	O
,	O
so	O
now	O
I	O
had	O
4	O
plots	O
after	O
recalculation	O
,	O
just	O
like	O
before	O
.	O

@USER	O
-	O
Where	O
exactly	O
in	O
your	O
code	O
are	O
you	O
calling	O
`	O
clear	B-API
`	O
?	O

You	O
should	O
be	O
calling	O
`	O
graph1.clear()	O
;	O
graph2.clear()	O
`	O
inside	O
your	O
`	O
for	O
`	O
loop	O
,	O
just	O
before	O
you	O
call	O
`	O
graph1.plot	O
(	O
...	O
)`	O
,	O
`	O
graph2.plot	O
(	O
...	O
)`	O
etc	O
...	O

That	O
for	O
loop	O
creates	O
calles	O
graphx.plot	O
(	O
...	O
)	O
N	O
times	O
and	O
putting	O
the	O
clear	O
statements	O
in	O
there	O
only	O
plots	O
the	O
last	O
one	O
.	O

I've	O
actually	O
pulled	O
out	O
the	O
canvas	O
code	O
and	O
put	O
it	O
into	O
the	O
main	O
program	O
loop	O
along	O
with	O
the	O
figure	O
code	O
and	O
I	O
now	O
have	O
my	O
function	O
being	O
called	O
by	O
a	O
button	O
.	O

For	O
some	O
reason	O
if	O
I	O
just	O
call	O
the	O
function	O
the	O
plots	O
get	O
updated	O
,	O
but	O
if	O
I	O
press	O
the	O
button	O
the	O
plots	O
do	O
not	O
.	O

It's	O
pretty	O
interesting	O
behavior	O
.	O

I	O
think	O
that	O
must	O
be	O
a	O
bug	O
in	O
Tkinter	O
.	O

It's	O
2k14	O
and	O
I	O
stumbled	O
to	O
achieve	O
something	O
like	O
this	O
...	O

it	O
works	O
as	O
expected	O
but	O
the	O
plotting	O
window	O
is	O
turning	O
"	O
not	O
responding	O
"	O
..	O
any	O
suggestions	O
??	O

you	O
need	O
to	O
add	O
:	O
fig.canvas.flush_events()	O
after	O
your	O
draw	O
method	O

This	O
worked	O
for	O
me	O
.	O

Repeatedly	O
calls	O
a	O
function	O
updating	O
the	O
graph	O
every	O
time	O
.	O

"	O
fun	O
"	O
is	O
a	O
function	O
that	O
returns	O
an	O
integer	O
.	O

FuncAnimation	O
will	O
repeatedly	O
call	O
"	O
update	O
"	O
,	O
it	O
will	O
do	O
that	O
"	O
xmax	O
"	O
times	O
.	O

Could	O
you	O
give	O
an	O
example	O
on	O
how	O
you	O
call	O
this	O
function	O
(	O
especially	O
how	O
you	O
pass	O
a	O
function	O
in	O
a	O
function	O
call	O
)	O
as	O
well	O
as	O
how	O
the	O
fun()	O
function	O
looks	O
like	O
?	O

Sure	O
.	O

"	O
fun()	O
"	O
is	O
any	O
function	O
that	O
returns	O
an	O
integer	O
.	O

You	O
can	O
pass	O
the	O
function	O
as	O
an	O
argument	O
to	O
another	O
like	O
this	O
:	O
"	O
plot_cont	O
(	O
my_function	O
,	O
123	O
)"	O
.	O

There	O
you	O
have	O
me	O
calling	O
plot_cont	O
at	O
line	O
86	O
:	O
github.com/vitobasso/audio-ml/blob	O

In	O
case	O
anyone	O
comes	O
across	O
this	O
article	O
looking	O
for	O
what	O
I	O
was	O
looking	O
for	O
,	O
I	O
found	O
examples	O
at	O

How	O
to	O
visualize	O
scalar	O
2D	O
data	O
with	O
Matplotlib	O
?	O

and	O

http://mri.brechmos.org/2009/07/automatically-update-a-figure-in-a-loop	O

(	O
on	O
web.archive.org	O
)	O

then	O
modified	O
them	O
to	O
use	O
imshow	O
with	O
an	O
input	O
stack	B-API
of	O
frames	O
,	O
instead	O
of	O
generating	O
and	O
using	O
contours	O
on	O
the	O
fly	O
.	O

Starting	O
with	O
a	O
3D	O
array	O
of	O
images	O
of	O
shape	O
(	O
nBins	O
,	O
nBins	O
,	O
nBins	O
)	O
,	O
called	O
`	O
frames	O
`	O
.	O

I	O
also	O
found	O
a	O
much	O
simpler	O
way	O
to	O
go	O
about	O
this	O
whole	O
process	O
,	O
albeit	O
less	O
robust	O
:	O

Note	O
that	O
both	O
of	O
these	O
only	O
seem	O
to	O
work	O
with	O
`	O
ipython	O
--	O
pylab=tk	O
`	O
,	O
a.k.a	O
.	O

`	O
backend	O
=	O
TkAgg	O
`	O

Thank	O
you	O
for	O
the	O
help	O
with	O
everything	O
.	O

I	O
have	O
released	O
a	O
package	O
called	O
python-drawnow	O
that	O
provides	O
functionality	O
to	O
let	O
a	O
figure	O
update	O
,	O
typically	O
called	O
within	O
a	O
for	O
loop	O
,	O
similar	O
to	O
Matlab's	O
`	O
drawnow	O
`	O
.	O

An	O
example	O
usage	O
:	O

This	O
package	O
works	O
with	O
any	O
matplotlib	O
figure	O
and	O
provides	O
options	O
to	O
wait	O
after	O
each	O
figure	O
update	O
or	O
drop	O
into	O
the	O
debugger	O
.	O

How	O
is	O
it	O
robust	O
and	O
unstable	O
at	O
the	O
same	O
time	O
?	O

I	O
meant	O
robust	O
as	O
in	O
"	O
works	O
with	O
any	O
matplotlib	O
figure	O
"	O
and	O
unstable	O
as	O
in	O
"	O
weekend	O
project	O
"	O
.	O

I've	O
updated	O
my	O
answer	O

All	O
of	O
the	O
above	O
might	O
be	O
true	O
,	O
however	O
for	O
me	O
"	O
online-updating	O
"	O
of	O
figures	O
only	O
works	O
with	O
some	O
backends	O
,	O
specifically	O
`	O
wx	O
`	O
.	O

You	O
just	O
might	O
try	O
to	O
change	O
to	O
this	O
,	O
e.g.	O
by	O
starting	O
ipython	O
/	O
pylab	O
by	O
`	O
ipython	O
--	O
pylab=wx	O
`	O
!	O

Good	O
luck	O
!	O

Thank	O
you	O
for	O
your	O
message	O
,	O
I	O
never	O
used	O
the	O
interactive	O
mode	O
because	O
it	O
never	O
worked	O
with	O
the	O
default	O
backend	O
I	O
used	O
.	O

It's	O
much	O
nicer	O
to	O
use	O
the	O
interactive	O
mode	O
than	O
stopping	O
the	O
execution	O
each	O
time	O
you	O
want	O
to	O
see	O
a	O
graph	O
!	O

