Is	O
it	O
possible	O
to	O
plot	O
implicit	O
equations	O
using	O
Matplotlib	O
?	O

I	O
would	O
like	O
to	O
plot	O
implicit	O
equations	O
(	O
of	O
the	O
form	O
f	O
(	O
x	O
,	O
y	O
)=	O
g	O
(	O
x	O
,	O
y	O
)	O
eg	O
.	O
X^y=y^x	O
)	O
in	O
Matplotlib	O
.	O

Is	O
this	O
possible	O
?	O

I	O
don't	O
believe	O
there's	O
very	O
good	O
support	O
for	O
this	O
,	O
but	O
you	O
could	O
try	O
something	O
like	O

See	O
the	O
API	O
docs	O
for	O
`	O
contour	O
`	O
:	O
if	O
the	O
fourth	O
argument	O
is	O
a	O
sequence	O
then	O
it	O
specifies	O
which	O
contour	O
lines	O
to	O
plot	O
.	O

But	O
the	O
plot	O
will	O
only	O
be	O
as	O
good	O
as	O
the	O
resolution	O
of	O
your	O
ranges	O
,	O
and	O
there	O
are	O
certain	O
features	O
it	O
may	O
never	O
get	O
right	O
,	O
often	O
at	O
self-intersection	O
points	O
.	O

This	O
is	O
a	O
good	O
solution	O
.	O

My	O
solution	O
is	O
a	O
more	O
manual	O
way	O
of	O
getting	O
at	O
the	O
same	O
piece	O
of	O
information	O
using	O
the	O
same	O
underlying	O
concept	O
:	O
setting	O
up	O
the	O
implicit	O
equation	O
as	O
f	O
(	O
x	O
,	O
y	O
)	O
such	O
that	O
f	O
(	O
x	O
,	O
y	O
)	O
=	O
0	O
is	O
equivalent	O
to	O
the	O
original	O
implicit	O
equation	O
and	O
isolating	O
its	O
zero	O
contour	O
.	O

Since	O
you've	O
tagged	O
this	O
question	O
with	O
sympy	O
,	O
I	O
will	O
give	O
such	O
an	O
example	O
.	O

From	O
the	O
documentation	O
:	O
http://docs.sympy.org/modules/plotting.html	O
.	O

matplotlib	O
does	O
not	O
plot	O
equations	O
;	O
it	O
plots	O
serieses	O
of	O
points	O
.	O

You	O
can	O
use	O
a	O
tool	O
like	O
`	O
scipy	O
.optimize	O
`	O
to	O
numerically	O
calculate	O
y	O
points	O
from	O
x	O
values	O
(	O
or	O
vice	O
versa	O
)	O
of	O
implicit	O
equations	O
numerically	O
or	O
any	O
number	O
of	O
other	O
tools	O
as	O
appropriate	O
.	O

For	O
example	O
,	O
here	O
is	O
an	O
example	O
where	O
I	O
plot	O
the	O
implicit	O
equation	O
`	O
x	O
**	O
2	O
+	O
x	O
*	O
y	O
+	O
y	O
**	O
2	O
=	O
10	O
`	O
in	O
a	O
certain	O
region	O
.	O

There	O
is	O
an	O
implicit	O
equation	O
(	O
and	O
inequality	O
)	O
plotter	O
in	O
the	O
development	O
version	O
of	O
sympy	O
.	O

It	O
is	O
created	O
as	O
a	O
part	O
of	O
GSoC	O
and	O
it	O
produces	O
the	O
plots	O
as	O
matplotlib	O
figure	O
instances	O
.	O

In	O
the	O
next	O
version	O
of	O
sympy	O
(	O
0.7.2	O
)	O
it	O
will	O
be	O
available	O
as	O
:	O

I	O
will	O
update	O
this	O
post	O
when	O
it	O
is	O
released	O
.	O

It	O
seems	O
it's	O
released	O
now	O
.	O

:)	O

Where	O
is	O
your	O
`	O
the_matplotlib_axes_instance	O
`	O
coming	O
from	O
?	O

`	O
p	O
`	O
is	O
the	O
plot	O
you	O
created	O
.	O

`	O
p._backend._ax	O
`	O
would	O
be	O
axes	O
instance	O
and	O
if	O
you	O
wish	O
you	O
can	O
reference	O
it	O
in	O
a	O
new	O
variable	O
and	O
use	O
it	O
for	O
whatever	O
you	O
would	O
use	O
any	O
matplotlib	O
axes	O
instance	O
.	O

If	O
you're	O
willing	O
to	O
use	O
something	O
other	O
than	O
matplotlib	O
(	O
but	O
still	O
python	O
)	O
,	O
there's	O
sage	O
:	O

An	O
example	O
:	O
http://sagenb.org/home/pub/1806	O

Documentation	O
for	O
implicit_plot	O

The	O
Sage	O
Homepage	O

Many	O
thanks	O
Steve	O
,	O
Mike	O
,	O
Alex	O
.	O

I	O
have	O
gone	O
along	O
with	O
Steve's	O
solution	O
(	O
please	O
see	O
code	O
below	O
)	O
.	O

My	O
only	O
remaining	O
issue	O
is	O
that	O
the	O
contour	O
plot	O
appears	O
behind	O
my	O
gridlines	O
,	O
as	O
opposed	O
to	O
a	O
regular	O
plot	O
,	O
which	O
I	O
can	O
force	O
to	O
the	O
front	O
with	O
zorder	O
.	O

Any	O
more	O
halp	O
greatly	O
appreciated	O
.	O

Cheers	O
,	O

Geddes	O

@USER	O
,	O
it	O
looks	O
like	O
support	O
for	O
contour	O
respecting	O
zorder	O
has	O
only	O
recently	O
been	O
added	O
to	O
the	O
matplotlib	O
source	O
.	O

From	O
their	O
SVN	O
trunk	O
:	O
matplotlib.svn.sourceforge.net/viewvc	O

