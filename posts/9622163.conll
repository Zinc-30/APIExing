Save	O
plot	O
to	O
image	O
file	O
instead	O
of	O
displaying	O
it	O
using	O
Matplotlib	O

I	O
am	O
writing	O
a	O
quick-and-dirty	O
script	O
to	O
generate	O
plots	O
on	O
the	O
fly	O
.	O

I	O
am	O
using	O
the	O
code	O
below	O
(	O
from	O
Matplotlib	O
documentation	O
)	O
as	O
a	O
starting	O
point	O
:	O

I	O
don't	O
want	O
to	O
display	O
the	O
plot	O
on	O
a	O
GUI	O
,	O
instead	O
,	O
I	O
want	O
to	O
save	O
the	O
plot	O
to	O
a	O
file	O
(	O
say	O
foo.png	O
)	O
,	O
so	O
that	O
,	O
for	O
example	O
,	O
it	O
can	O
be	O
used	O
in	O
batch	O
scripts	O
.	O

How	O
do	O
I	O
do	O
that	O
?	O

Looks	O
like	O
I	O
found	O
the	O
answer	O
:	O
its	O
pylab.savefig	O
(	O
'	O
foo.png	O
')	O

Link	O
should	O
maybe	O
link	O
to	O
somewhere	O
in	O
matplotlib.org	O
?	O

Also	O
if	O
not	O
using	O
pylab	O
,	O
the	O
figure	O
object	O
has	O
a	O
`	O
savefig	O
`	O
method	O
too	O
.	O

So	O
you	O
can	O
call	O
`	O
fig	O
=	O
plt.figure()	O
`	O
then	O
`	O
fig.savefig	O
(	O
...	O
)`	O
.	O

Many	O
of	O
the	O
answers	O
lower	O
down	O
the	O
page	O
mention	O
`	O
plt.close	O
(	O
fig	O
)`	O
which	O
is	O
especially	O
important	O
in	O
big	O
loops	O
.	O

Otherwise	O
the	O
figures	O
remain	O
open	O
and	O
waiting	O
in	O
memory	O
and	O
all	O
open	O
figures	O
will	O
be	O
shown	O
upon	O
executing	O
`	O
plt.show()	O
`	O

While	O
the	O
question	O
has	O
been	O
answered	O
,	O
I'd	O
like	O
to	O
add	O
some	O
useful	O
tips	O
when	O
using	O
savefig	O
.	O

The	O
file	O
format	O
can	O
be	O
specified	O
by	O
the	O
extension	O
:	O

Will	O
give	O
a	O
rasterized	O
or	O
vectorized	O
output	O
respectively	O
,	O
both	O
which	O
could	O
be	O
useful	O
.	O

In	O
addition	O
,	O
you'll	O
find	O
that	O
`	O
pylab	O
`	O
leaves	O
a	O
generous	O
,	O
often	O
undesirable	O
,	O
whitespace	O
around	O
the	O
image	O
.	O

Remove	O
it	O
with	O
:	O

Is	O
it	O
possible	O
to	O
change	O
the	O
dimensions	O
of	O
the	O
resulting	O
image	O
?	O

@USER	O
In	O
`	O
plt.savefig	O
`	O
you	O
can	O
change	O
the	O
dpi	O
,	O
see	O
the	O
link	O
in	O
the	O
answer	O
.	O

The	O
dimensions	O
can	O
be	O
controlled	O
when	O
creating	O
the	O
figure	O
,	O
see	O
`	O
figsize	O
`	O
in	O
matplotlib.org/api/figure_api.html#matplotlib.figure.Figure	O

@USER	O
plt.savefig	O
saves	O
the	O
figure	O
but	O
is	O
does	O
not	O
prevent	O
displaying	O
it	O
.	O

Even	O
when	O
I	O
leave	O
out	O
plt.show()	O
the	O
figure	O
is	O
displayed	O
.	O

How	O
can	O
I	O
prevent	O
that	O
?	O

@USER	O
you	O
can	O
call	O
`	O
plt.ioff()	O
`	O
which	O
should	O
disable	O
interactiveness	O
in	O
`	O
matplotlib.pyplot	O
`	O
commands	O
.	O

The	O
solution	O
is	O
:	O

As	O
others	O
have	O
said	O
,	O
`	O
plt.savefig()	O
`	O
or	O
`	O
fig1.savefig()	O
`	O
is	O
indeed	O
the	O
way	O
to	O
save	O
an	O
image	O
.	O

However	O
I've	O
found	O
that	O
in	O
certain	O
cases	O
(	O
eg	O
.	O
with	O
Spyder	O
having	O
`	O
plt.ion()	O
`	O
:	O
interactive	O
mode	O
=	O
On	O
)	O
the	O
figure	O
is	O
always	O
shown	O
.	O

I	O
work	O
around	O
this	O
by	O
forcing	O
the	O
closing	O
of	O
the	O
figure	O
window	O
in	O
my	O
giant	O
loop	O
,	O
so	O
I	O
don't	O
have	O
a	O
million	O
open	O
figures	O
during	O
the	O
loop	O
:	O

You	O
could	O
also	O
set	O
`	O
plt.ioff()	O
#	O
turn	O
of	O
interactive	O
plotting	O
mode	O
`	O
,	O
but	O
that	O
might	O
disable	O
behaviour	O
you	O
would	O
want	O
to	O
use	O
should	O
your	O
code	O
exit	O
with	O
an	O
error	O
.	O

Just	O
found	O
this	O
link	O
on	O
the	O
MatPlotLib	O
documentation	O
addressing	O
exactly	O
this	O
issue	O
:	O

http://matplotlib.org/faq/howto_faq.html#generate-images-without-having-a-window-appear	O

They	O
say	O
that	O
the	O
easiest	O
way	O
to	O
prevent	O
the	O
figure	O
from	O
popping	O
up	O
is	O
to	O
use	O
a	O
non-interactive	O
backend	O
(	O
eg	O
.	O
Agg	B-API
)	O
,	O
via	O
`	O
matplotib.use	O
(	O
backend	O
)`	O
,	O
eg	O
:	O

I	O
still	O
personally	O
prefer	O
using	O
`	O
plt.close	O
(	O
fig	O
)`	O
,	O
since	O
then	O
you	O
have	O
the	O
option	O
to	O
hide	O
certain	O
figures	O
(	O
during	O
a	O
loop	O
)	O
,	O
but	O
still	O
display	O
figures	O
for	O
post-loop	O
data	O
processing	O
.	O

It	O
is	O
probably	O
slower	O
than	O
choosing	O
a	O
non-interactive	O
backend	O
though	O
-	O
would	O
be	O
interesting	O
if	O
someone	O
tested	O
that	O
.	O

If	O
you	O
don't	O
like	O
the	O
concept	O
of	O
the	O
"	O
current	O
"	O
figure	O
,	O
do	O
:	O

Doesn't	O
this	O
just	O
copy	O
`	O
src.png	O
`	O
to	O
`	O
out.png	O
`	O
?	O

That's	O
just	O
an	O
example	O
,	O
that	O
shows	O
if	O
you	O
have	O
an	O
image	O
object	O
(	O
`	O
img	O
`)	O
,	O
then	O
you	O
can	O
save	O
it	O
into	O
file	O
with	O
`	O
.imsave()	O
`	O
method	O
.	O

@USER	O
.mice	O
would	O
help	O
to	O
show	O
how	O
to	O
create	O
an	O
image	O
without	O
using	O
the	O
current	O
figure	O
.	O

@USER	O
.mice	O
Thanks	O
for	O
this	O
example	O
,	O
it's	O
the	O
first	O
one	O
that	O
showed	O
me	O
how	O
to	O
save	O
an	O
image	O
object	O
to	O
.png	O
.	O

The	O
other	O
answers	O
are	O
correct	O
.	O

However	O
,	O
I	O
sometimes	O
find	O
that	O
I	O
want	O
to	O
open	O
the	O
figure	O
object	O
later	O
.	O

For	O
example	O
,	O
I	O
might	O
want	O
to	O
change	O
the	O
label	O
sizes	O
,	O
add	O
a	O
grid	O
,	O
or	O
do	O
other	O
processing	O
.	O

In	O
a	O
perfect	O
world	O
,	O
I	O
would	O
simply	O
rerun	O
the	O
code	O
generating	O
the	O
plot	O
,	O
and	O
adapt	O
the	O
settings	O
.	O

Alas	O
,	O
the	O
world	O
is	O
not	O
perfect	O
.	O

Therefore	O
,	O
in	O
addition	O
to	O
saving	O
to	O
PDF	O
or	O
PNG	O
,	O
I	O
add	O
:	O

Like	O
this	O
,	O
I	O
can	O
later	O
load	O
the	O
figure	O
object	O
and	O
manipulate	O
the	O
settings	O
as	O
I	O
please	O
.	O

I	O
also	O
write	O
out	O
the	O
stack	B-API
with	O
the	O
source-code	O
and	O
`	O
locals()	O
`	O
dictionary	O
for	O
each	O
function	O
/	O
method	O
in	O
the	O
stack	B-API
,	O
so	O
that	O
I	O
can	O
later	O
tell	O
exactly	O
what	O
generated	O
the	O
figure	O
.	O

NB	O
:	O
Be	O
careful	O
,	O
as	O
sometimes	O
this	O
method	O
generates	O
huge	O
files	O
.	O

I	O
used	O
the	O
following	O
:	O

I	O
found	O
very	O
important	O
to	O
use	O
plt.show	O
after	O
saving	O
the	O
figure	O
,	O
otherwise	O
it	O
won't	O
work	O
.	O
figure	O
exported	O
in	O
png	O

After	O
using	O
the	O
plot()	O
and	O
other	O
functions	O
to	O
create	O
the	O
content	O
you	O
want	O
,	O
you	O
could	O
use	O
a	O
clause	O
like	O
this	O
to	O
select	O
between	O
plotting	O
to	O
the	O
screen	O
or	O
to	O
file	O
:	O

If	O
,	O
like	O
me	O
,	O
you	O
use	O
Spyder	O
IDE	O
,	O
you	O
have	O
to	O
disable	O
the	O
interactive	O
mode	O
with	O
:	O

`	O
plt.ioff()	O
`	O

(	O
this	O
command	O
is	O
automatically	O
launched	O
with	O
the	O
scientific	O
startup	O
)	O

If	O
you	O
want	O
to	O
enable	O
it	O
again	O
,	O
use	O
:	O

`	O
plt.ion()	O
`	O

The	O
Solution	O
:	O

If	O
you	O
do	O
want	O
to	O
display	O
the	O
image	O
as	O
well	O
as	O
saving	O
the	O
image	O
use	O
:	O

after	O

`	O
import	O
matplotlib	O
`	O

