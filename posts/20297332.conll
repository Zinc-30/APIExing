Python	O
pandas	O
dataframe	B-API
:	O
retrieve	O
number	O
of	O
columns	O

How	O
do	O
you	O
programmatically	O
retrieve	O
the	O
number	O
of	O
columns	O
in	O
a	O
pandas	O
dataframe	B-API
?	O

I	O
was	O
hoping	O
for	O
something	O
like	O
:	O

doesn't	O
work	O
for	O
me	O
.	O

Like	O
so	O
:	O

plus	O
`	O
df.shape	B-API
`	O
gives	O
a	O
tuple	O
with	O
(	O
n_rows	O
,	O
n_columns	O
)	O

@USER	O
if	O
you	O
post	O
df.shape	B-API
[	O
1	O
]	O
as	O
an	O
answer	O
,	O
I'd	O
+1	O
.	O

This	O
is	O
the	O
better	O
way	O
to	O
work	O
with	O
numpy	O
and	O
deserves	O
to	O
be	O
a	O
separate	O
answer	O
.	O

done	O
.	O

@USER	O
perhaps	O
you	O
could	O
explain	O
why	O
`	O
df.shape	B-API
`	O
is	O
better	O
?	O

my	O
guess	O
is	O
that	O
it	O
does	O
not	O
call	O
a	O
function	O
but	O
just	O
reads	O
the	O
attribute	O
from	O
memory	O
?	O

Alternative	O
:	O

(	O
`	O
df.shape	B-API
[	O
0	O
]`	O
is	O
the	O
number	O
of	O
rows	O
)	O

+1	O
because	O
I	O
like	O
to	O
encourage	O
addressing	O
of	O
numpy	O
and	O
pandas	O
objects	O
with	O
martix	O
type	O
syntax	O
.	O

(	O
df.shape	B-API
vs	O
len	O
(	O
df.columns	O
))	O
.	O

Truth	O
be	O
told	O
,	O
if	O
you	O
look	O
at	O
the	O
pandas	O
descriptor	O
for	O
shape	O
,	O
it	O
calls	O
len	O
(	O
df.columns	O
)	O
but	O
numpy	O
arrays	O
and	O
matricies	O
have	O
them	O
as	O
an	O
attribute	O
.	O
most	O
efficient	O
vectorized	O
operations	O
can	O
be	O
done	O
with	O
regular	O
python	O
syntas	O
as	O
opposed	O
to	O
vectorized	O
operations	O
and	O
is	O
almost	O
always	O
wrong	O
(	O
numba	O
/	O
jit	O
operations	O
excepted	O
from	O
that	O
criticizm	O
)	O

If	O
the	O
variable	O
holding	O
the	O
dataframe	B-API
is	O
called	O
df	O
,	O
then	O
:	O

gives	O
the	O
number	O
of	O
columns	O
.	O

And	O
for	O
those	O
who	O
want	O
the	O
number	O
of	O
rows	O
:	O

For	O
a	O
tuple	O
containing	O
the	O
number	O
of	O
both	O
rows	O
and	O
columns	O
:	O

Wouldn't	O
`	O
len	O
(	O
df	O
)`	O
give	O
you	O
the	O
rows	O
?	O

@USER	O
pandas	O
has	O
so	O
many	O
shortcuts	O
that	O
are	O
easy	O
to	O
forget	O
so	O
I	O
prefer	O
to	O
ignore	O
them	O
and	O
and	O
use	O
the	O
main	O
logic	O
instead	O
to	O
solve	O
things	O
.	O

You	O
may	O
sacrifice	O
processing	O
speed	O
sometimes	O
,	O
but	O
I	O
value	O
my	O
coding	O
time	O
and	O
code	O
readability	O
more	O
than	O
a	O
few	O
seconds	O
of	O
processing	O
time	O
.	O

In	O
this	O
particular	O
case	O
:	O
if	O
you	O
learn	O
that	O
the	O
number	O
of	O
rows	O
can	O
be	O
calculated	O
with	O
len	O
(	O
df.index	O
)	O
,	O
next	O
time	O
you	O
need	O
the	O
number	O
of	O
columns	O
it	O
comes	O
natural	O
to	O
do	O
len	O
(	O
df.columns	O
)	O
.	O

