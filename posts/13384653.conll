Imshow	O
:	O
extent	O
and	O
aspect	O

I'm	O
writing	O
a	O
software	O
system	O
that	O
visualizes	O
slices	O
and	O
projections	O
through	O
a	O
3D	O
dataset	O
.	O

I'm	O
using	O
`	O
matplotlib	O
`	O
and	O
specifically	O
`	O
imshow	O
`	O
to	O
visualize	O
the	O
image	O
buffers	O
I	O
get	O
back	O
from	O
my	O
analysis	O
code	O
.	O

Since	O
I'd	O
like	O
to	O
annotate	O
the	O
images	O
with	O
plot	O
axes	O
,	O
I	O
use	O
the	O
extent	O
keyword	O
that	O
`	O
imshow	O
`	O
supplies	O
to	O
map	B-API
the	O
image	O
buffer	O
pixel	O
coordinates	O
to	O
a	O
data	O
space	O
coordinate	O
system	O
.	O

Unfortuantely	O
,	O
`	O
matplotlib	O
`	O
doesn't	O
know	O
about	O
units	O
.	O

Say	O
(	O
taking	O
an	O
artificial	O
example	O
)	O
that	O
I	O
want	O
to	O
plot	O
an	O
image	O
with	O
dimensions	O
of	O
`	O
1000	O
m	O
X	O
1	O
km	O
`	O
.	O

In	O
that	O
case	O
the	O
extent	O
would	O
be	O
something	O
like	O
`	O
[	O
0	O
,	O
1000	O
,	O
0	O
,	O
1	O
]`	O
.	O

Even	O
though	O
the	O
image	O
array	O
is	O
square	O
,	O
since	O
the	O
aspect	O
ratio	O
implied	O
by	O
the	O
extent	O
keyword	O
is	O
1000	O
,	O
the	O
resulting	O
plot	O
axes	O
also	O
have	O
an	O
aspect	O
ratio	O
of	O
1000	O
.	O

Is	O
it	O
possible	O
to	O
force	O
the	O
aspect	O
ratio	O
of	O
the	O
plot	O
while	O
still	O
keeping	O
the	O
automatically	O
generated	O
major	O
tick	O
marks	O
and	O
labels	O
I	O
get	O
by	O
using	O
the	O
extent	O
keyword	O
?	O

You	O
can	O
do	O
it	O
by	O
setting	O
the	O
aspect	O
of	O
the	O
image	O
manually	O
(	O
or	O
by	O
letting	O
it	O
auto-scale	O
to	O
fill	O
up	O
the	O
extent	O
of	O
the	O
figure	O
)	O
.	O

By	O
default	O
,	O
`	O
imshow	O
`	O
sets	O
the	O
aspect	O
of	O
the	O
plot	O
to	O
1	O
,	O
as	O
this	O
is	O
often	O
what	O
people	O
want	O
for	O
image	O
data	O
.	O

In	O
your	O
case	O
,	O
you	O
can	O
do	O
something	O
like	O
:	O

Thank	O
you	O
so	O
much	O
-	O
I	O
didn't	O
realize	O
that	O
I	O
have	O
to	O
modify	O
the	O
aspect	O
to	O
recover	O
a	O
square	O
window	O
.	O

My	O
plots	O
look	O
perfect	O
now	O
!	O

Great	O
answer	O
thanks	O
!	O

