How to have clusters of stacked bars with python ( Pandas )
So here is how my data set looks like :
I want to have stacked bar plot for each dataframe but since they have same index , I'd like to have 2 stacked bars per index .
I've tried to plot both on the same axes :
But it overlaps .
Then I tried to concat the two dataset first :
but here everything is stacked
My best try is :
Which gives :
This is basically what I want , except that I want the bar ordered as
( df1 , A ) ( df2 , A ) ( df1 , B ) ( df2 , B ) etc ...
I guess there is a trick but I can't found it !
After @USER ' s answer I got this :
Which is almost what I want . I would like the bar to be clustered by index , in order to have something visually clear .
Bonus : Having the x-label not redundant , something like :
Thanks for helping .
So , I eventually found a trick ( edit : see below for using seaborn and longform dataframe ):
Solution with pandas and matplotlib
Here it is with a more complete example :
And it gives that :
You can change the colors of the bar by passing a ` cmap ` argument :
Solution with seaborn :
Given the same df1 , df2 , df3 , below , I convert them in a long form :
The problem with seaborn is that it doesn't stack bars natively , so the trick is to plot the cumulative sum of each bar on top of each other :
Then loop over each group of ` variable ` and plot the cumulative sum :
It lacks the legend that can be added easily I think . The problem is that instead of hatches ( which can be added easily ) to differentiate the dataframes we have a gradient of lightness , and it's a bit too light for the first one , and I don't really know how to change that without changing each rectangle one by one ( as in the first solution ) .
Tell me if you don't understand something in the code .
Feel free to re-use this code which is under CC0 .
Nice ! How an this be plotted with mpld3 ?
I don't know mpdld3 , but from what I understood from the doc , you just need to display it with ` mpld3.display ( plt.gcf() )` , or something similar .
Could you do me a huge favor and put this snipplet under BSD / MIT / CC-0 ? Thanks :)
@USER : Done , have fun !
Thank you ! It was very helpful .
I have managed to do the same using pandas and matplotlib subplots with basic commands .
Here's an example :
The dataframe structure of " subset " before grouping looks like this :
and the plot like this :
It is formatted in the " ggplot " style with the following header :
Great answer , but it is harder to follow without the data to replicate . Is it possible to download the data somewhere ?
You're on the right track ! In order to change the order of the bars , you should change the order in the index .
So we want to swap axes , then reorder . Here's an easy way to do this
If it's important that your horizontal labels show up in the old order ( df1 , A ) rather than ( A , df1 ) , we can just ` swaplevel ` s again and not ` sort_index ` :
Thanks , it works aaaalmost as expected . I'd like to have something visually clear , here all bars are equally distributed along the x-axis , I'd like to have clustered 2 by 2 . Sorry I did not mention that in the question . ( I'll edit )
Altair can be helpful here . Here is the produced plot .
Imports
Dataset creation
Preparing dataset
Altair plot