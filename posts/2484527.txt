Is it possible to plot implicit equations using Matplotlib ?
I would like to plot implicit equations ( of the form f ( x , y )= g ( x , y ) eg . X^y=y^x ) in Matplotlib . Is this possible ?
I don't believe there's very good support for this , but you could try something like
See the API docs for ` contour ` : if the fourth argument is a sequence then it specifies which contour lines to plot . But the plot will only be as good as the resolution of your ranges , and there are certain features it may never get right , often at self-intersection points .
This is a good solution . My solution is a more manual way of getting at the same piece of information using the same underlying concept : setting up the implicit equation as f ( x , y ) such that f ( x , y ) = 0 is equivalent to the original implicit equation and isolating its zero contour .
Since you've tagged this question with sympy , I will give such an example .
From the documentation : http://docs.sympy.org/modules/plotting.html .
matplotlib does not plot equations ; it plots serieses of points . You can use a tool like ` scipy .optimize ` to numerically calculate y points from x values ( or vice versa ) of implicit equations numerically or any number of other tools as appropriate .
For example , here is an example where I plot the implicit equation ` x ** 2 + x * y + y ** 2 = 10 ` in a certain region .
There is an implicit equation ( and inequality ) plotter in the development version of sympy . It is created as a part of GSoC and it produces the plots as matplotlib figure instances .
In the next version of sympy ( 0.7.2 ) it will be available as :
I will update this post when it is released .
It seems it's released now . :)
Where is your ` the_matplotlib_axes_instance ` coming from ?
` p ` is the plot you created . ` p._backend._ax ` would be axes instance and if you wish you can reference it in a new variable and use it for whatever you would use any matplotlib axes instance .
If you're willing to use something other than matplotlib ( but still python ) , there's sage :
An example : http://sagenb.org/home/pub/1806
Documentation for implicit_plot
The Sage Homepage
Many thanks Steve , Mike , Alex . I have gone along with Steve's solution ( please see code below ) . My only remaining issue is that the contour plot appears behind my gridlines , as opposed to a regular plot , which I can force to the front with zorder . Any more halp greatly appreciated .
Cheers ,
Geddes
@USER , it looks like support for contour respecting zorder has only recently been added to the matplotlib source . From their SVN trunk : matplotlib.svn.sourceforge.net/viewvc