How to convert 2D float numpy array to 2D int numpy array ?
How to convert real numpy array to int numpy array ?
Tried using map directly to array but it did not work .
Use the ` astype ` method .
Just make sure you don't have ` np.inf ` or ` np.nan ` in your array , since they have surprising results . For example , ` np.array ([ np.inf ]) .astype ( int )` outputs ` array ([ -922337203685477580 8]) ` .
Some numpy functions for how to control the rounding : rint , floor , trunc , ceil . depending how u wish to round the floats , up , down , or to the nearest int .
To make one of this in to int , or one of the other types in numpy , astype ( as answered by BrenBern ):
Exactly what I was looking for . ` astype ` is often too generic , and I think it probably is more useful when doing intx - inty conversions . When I want to do float - int conversion being able to choose the kind of rounding is a nice feature .
So the simplest way to safely convert almost-ints like ` 7.99999 ` to ints like ` 8 ` , is ` np.rint ( arr ) .astype ( int )` ?
you can use ` np.int_ ` :
If you're not sure your input is going to be a Numpy array , you can use ` asarray ` with ` dtype=int ` instead of ` astype ` :
If the input array already has the correct dtype , ` asarray ` avoids the array copy while ` astype ` does not ( unless you specify ` copy=False `) :