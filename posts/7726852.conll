How	O
to	O
use	O
a	O
(	O
random	O
)	O
*	O
.otf	O
or	O
*	O
.ttf	O
font	O
in	O
matplotlib	O
?	O

How	O
can	O
I	O
use	O
any	O
type	O
of	O
font	O
in	O
my	O
font	O
library	O
on	O
my	O
computer	O
(	O
e.g.	O
`	O
*otf	O
`	O
or	O
`	O
*ttf	O
`)	O
in	O
all	O
my	O
`	O
matplotlib	O
`	O
figures	O
?	O

See	O
the	O
example	O
here	O
:	O
http://matplotlib.sourceforge.net/examples/api/font_file.html	O

In	O
general	O
,	O
you'd	O
do	O
something	O
like	O
this	O
if	O
you're	O
wanting	O
to	O
use	O
a	O
specific	O
`	O
.ttf	O
`	O
file	O
.	O

(	O
Keep	O
in	O
mind	O
that	O
pointing	O
to	O
a	O
specific	O
font	O
file	O
is	O
usually	O
a	O
bad	O
idea	O
!	O
)	O

Usually	O
,	O
you'd	O
just	O
point	O
to	O
the	O
name	O
of	O
the	O
font	O
,	O
and	O
let	O
matplotlib	O
worry	O
about	O
finding	O
the	O
specific	O
file	O
.	O

E.g	O
.	O

If	O
you	O
want	O
to	O
have	O
matplotlib	O
always	O
use	O
a	O
particular	O
font	O
,	O
then	O
customize	O
your	O
`	O
.matplotlibrc	O
`	O
file	O
.	O

(	O
`	O
font.family	O
`	O
is	O
what	O
you'd	O
want	O
to	O
set	O
.	O
Note	O
that	O
you	O
should	O
specify	O
the	O
name	O
of	O
the	O
font	O
,	O
not	O
the	O
path	O
to	O
a	O
specific	O
.ttf	O
file	O
.	O
)	O

As	O
an	O
example	O
of	O
doing	O
this	O
dynamically	O
(	O
i.e.	O
without	O
setting	O
up	O
a	O
specific	O
`	O
.matplotlibrc	O
`	O
file	O
):	O

On	O
*	O
nix	O
,	O
you	O
can	O
use	O
all	O
your	O
system	O
fonts	O
by	O
enabling	O
matplotlib's	O
fontconfig	O
backend	O
.	O

However	O
matplotlib	O
does	O
not	O
really	O
talk	O
to	O
fontconfig	O
libraries	O
it	O
emulates	O
its	O
behaviour	O
by	O
running	O
fontconfig	O
cli	O
utilities	O
.	O

Therefore	O
,	O
nuking	O
the	O
matplotlib	O
fontconfig	O
cache	O
so	O
it	O
discovers	O
new	O
fonts	O
can	O
be	O
a	O
lifesaver	O
(	O
the	O
existence	O
of	O
this	O
cache	O
is	O
direct	O
proof	O
of	O
lack	O
of	O
complete	O
fontconfig	O
integration	O
)	O
.	O

