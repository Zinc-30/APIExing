When	O
to	O
use	O
cla()	O
,	O
clf()	O
or	O
close()	O
for	O
clearing	O
a	O
plot	O
in	O
matplotlib	O
?	O

Matplotlib	O
offers	O
there	O
functions	O
:	O

The	O
documentation	O
doesn't	O
offer	O
a	O
lot	O
of	O
insight	O
into	O
what	O
the	O
difference	O
between	O
these	O
functions	O
is	O
.	O

When	O
should	O
I	O
use	O
each	O
function	O
and	O
what	O
exactly	O
does	O
it	O
do	O
?	O

They	O
all	O
do	O
different	O
things	O
,	O
since	O
matplotlib	O
uses	O
a	O
hierarchical	O
order	O
in	O
which	O
a	O
figure	O
window	O
contains	O
a	O
figure	O
which	O
may	O
consist	O
of	O
many	O
axes	O
.	O

Additionally	O
,	O
there	O
are	O
functions	O
from	O
the	O
pyplot	O
interface	O
and	O
there	O
are	O
methods	O
on	O
the	O
`	O
Figure	O
`	O
class	O
.	O

I	O
will	O
discuss	O
both	O
cases	O
below	O
.	O

pyplot	O
interface	O

`	O
pyplot	O
`	O
is	O
a	O
module	O
that	O
collects	O
a	O
couple	O
of	O
functions	O
that	O
allow	O
matplotlib	O
to	O
be	O
used	O
in	O
a	O
functional	O
manner	O
.	O

I	O
here	O
assume	O
that	O
`	O
pyplot	O
`	O
has	O
been	O
imported	O
as	O
`	O
import	O
matplotlib.pyplot	O
as	O
plt	O
`	O
.	O

In	O
this	O
case	O
,	O
there	O
are	O
three	O
different	O
commands	O
that	O
remove	O
stuff	O
:	O

`	O
plt.cla()	O
`	O
clears	O
an	O
axis	O
,	O
i.e.	O
the	O
currently	O
active	O
axis	O
in	O
the	O
current	O
figure	O
.	O

It	O
leaves	O
the	O
other	O
axes	O
untouched	O
.	O

`	O
plt.clf()	O
`	O
clears	O
the	O
entire	O
current	O
figure	O
with	O
all	O
its	O
axes	O
,	O
but	O
leaves	O
the	O
window	O
opened	O
,	O
such	O
that	O
it	O
may	O
be	O
reused	O
for	O
other	O
plots	O
.	O

`	O
plt.close()	O
`	O
closes	O
a	O
window	O
,	O
which	O
will	O
be	O
the	O
current	O
window	O
,	O
if	O
not	O
specified	O
otherwise	O
.	O

Which	O
functions	O
suits	O
you	O
best	O
depends	O
thus	O
on	O
your	O
use-case	O
.	O

The	O
`	O
close()	O
`	O
function	O
furthermore	O
allows	O
one	O
to	O
specify	O
which	O
window	O
should	O
be	O
closed	O
.	O

The	O
argument	O
can	O
either	O
be	O
a	O
number	O
or	O
name	O
given	O
to	O
a	O
window	O
when	O
it	O
was	O
created	O
using	O
`	O
figure	O
(	O
number_or_name	O
)`	O
or	O
it	O
can	O
be	O
a	O
figure	O
instance	O
`	O
fig	O
`	O
obtained	O
,	O
i.e.	O
,	O
using	O
`	O
fig	O
=	O
figure()	O
`	O
.	O

If	O
no	O
argument	O
is	O
given	O
to	O
`	O
close()	O
`	O
,	O
the	O
currently	O
active	O
window	O
will	O
be	O
closed	O
.	O

Furthermore	O
,	O
there	O
is	O
the	O
syntax	O
`	O
close	O
(	O
'	O
all	O
')`	O
,	O
which	O
closes	O
all	O
figures	O
.	O

methods	O
of	O
the	O
Figure	O
class	O

Additionally	O
,	O
the	O
`	O
Figure	O
`	O
class	O
provides	O
methods	O
for	O
clearing	O
figures	O
.	O

I'll	O
assume	O
in	O
the	O
following	O
that	O
`	O
fig	O
`	O
is	O
an	O
instance	O
of	O
a	O
`	O
Figure	O
`	O
:	O

`	O
fig.clf()	O
`	O
clears	O
the	O
entire	O
figure	O
.	O

This	O
call	O
is	O
equivalent	O
to	O
`	O
plt.clf()	O
`	O
only	O
if	O
`	O
fig	O
`	O
is	O
the	O
current	O
figure	O
.	O

`	O
fig.clear()	O
`	O
is	O
a	O
synonym	O
for	O
`	O
fig.clf()	O
`	O

Note	O
that	O
even	O
`	O
del	O
fig	O
`	O
will	O
not	O
close	O
the	O
associated	O
figure	O
window	O
.	O

As	O
far	O
as	O
I	O
know	O
the	O
only	O
way	O
to	O
close	O
a	O
figure	O
window	O
is	O
using	O
`	O
plt.close	O
(	O
fig	O
)`	O
as	O
described	O
above	O
.	O

Thanks	O
David	O
for	O
the	O
clear	O
explanation	O
.	O

A	O
couple	O
of	O
extra	O
sentences	O
in	O
the	O
matplotlib	O
documentation	O
would	O
go	O
a	O
long	O
way	O
!	O

Because	O
`	O
close()	O
`	O
is	O
a	O
non-specific	O
command	O
,	O
I	O
went	O
looking	O
for	O
a	O
way	O
to	O
specify	O
figure	O
closure	O
(	O
`	O
fig.close()	O
`	O
is	O
not	O
a	O
function	O
)	O
.	O

The	O
correct	O
syntax	O
is	O
:	O
`	O
plt.close	O
(	O
fig	O
)`	O
.	O

Good	O
point	O
.	O

I	O
added	O
more	O
details	O
to	O
the	O
answer	O
.	O

what	O
about	O
`	O
clear()	O
`	O
,	O
I	O
have	O
not	O
seen	O
much	O
difference	O
with	O
`	O
cla()	O
`	O
only	O
that	O
in	O
parasite	O
axes	O
only	O
`	O
cla()	O
`	O
is	O
treated	O
specially	O
.	O

There	O
is	O
no	O
`	O
clear()	O
`	O
function	O
in	O
my	O
`	O
matplotlib.pyplot	O
`	O
(	O
Version	O
1.4.2	O
on	O
MacOS	O
)	O
.	O

Could	O
you	O
direct	O
me	O
to	O
the	O
associated	O
documentation	O
?	O

There	O
is	O
just	O
a	O
caveat	O
that	O
I	O
discovered	O
today	O
.	O

If	O
you	O
have	O
a	O
function	O
that	O
is	O
calling	O
a	O
plot	O
a	O
lot	O
of	O
times	O
you	O
better	O
use	O
`	O
plt.close	O
(	O
fig	O
)`	O
instead	O
of	O
`	O
fig.clf()	O
`	O
somehow	O
the	O
first	O
does	O
not	O
accumulate	O
in	O
memory	O
.	O

In	O
short	O
if	O
memory	O
is	O
a	O
concern	O
use	O
plt.close	O
(	O
fig	O
)	O
(	O
Although	O
it	O
seems	O
that	O
there	O
are	O
better	O
ways	O
,	O
go	O
to	O
the	O
end	O
of	O
this	O
comment	O
for	O
relevant	O
links	O
)	O
.	O

So	O
the	O
the	O
following	O
script	O
will	O
produce	O
an	O
empty	O
list	O
:	O

Whereas	O
this	O
one	O
will	O
produce	O
a	O
list	O
with	O
five	O
figures	O
on	O
it	O
.	O

From	O
the	O
documentation	O
above	O
is	O
not	O
clear	O
to	O
me	O
what	O
is	O
the	O
difference	O
between	O
closing	O
a	O
figure	O
and	O
closing	O
a	O
window	O
.	O

Maybe	O
that	O
will	O
clarify	O
.	O

If	O
you	O
want	O
to	O
try	O
a	O
complete	O
script	O
there	O
you	O
have	O
:	O

If	O
memory	O
is	O
a	O
concern	O
somebody	O
already	O
posted	O
a	O
work-around	O
in	O
SO	O
see	O
:	O

Create	O
a	O
figure	O
that	O
is	O
reference	O
counted	O

Thanks	O
for	O
the	O
helpful	O
cross-reference	O
to	O
the	O
reference	O
counting	O
question	O
.	O

That's	O
exactly	O
how	O
Matplotlib	O
should	O
already	O
work	O
.	O

It's	O
equally	O
terrifying	O
and	O
appalling	O
that	O
figures	O
are	O
never	O
garbage	O
collected	O
under	O
the	O
standard	O
`	O
pyplot	O
`	O
API	O
.	O

