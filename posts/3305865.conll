What	O
is	O
the	O
difference	O
between	O
'	O
log	O
'	O
and	O
'	O
symlog	O
'	O
?	O

In	O
matplotlib	O
,	O
I	O
can	O
set	O
the	O
axis	O
scaling	O
using	O
either	O
`	O
pyplot.xscale()	O
`	O
or	O
`	O
Axes.set_xscale()	O
`	O
.	O

Both	O
functions	O
accept	O
three	O
different	O
scales	O
:	O
`'	O
linear	O
'`	O
|	O
`'	O
log	O
'`	O
|	O
`'	O
symlog	O
'`	O
.	O

What	O
is	O
the	O
difference	O
between	O
`'	O
log	O
'`	O
and	O
`'	O
symlog	O
'`	O
?	O

In	O
a	O
simple	O
test	O
I	O
did	O
,	O
they	O
both	O
looked	O
exactly	O
the	O
same	O
.	O

I	O
know	O
the	O
documentation	O
says	O
they	O
accept	O
different	O
parameters	O
,	O
but	O
I	O
still	O
don't	O
understand	O
the	O
difference	O
between	O
them	O
.	O

Can	O
someone	O
please	O
explain	O
it	O
?	O

The	O
answer	O
will	O
be	O
the	O
best	O
if	O
it	O
has	O
some	O
sample	O
code	O
and	O
graphics	O
!	O

(	O
also	O
:	O
where	O
does	O
the	O
name	O
'	O
symlog	O
'	O
come	O
from	O
?	O
)	O

I	O
finally	O
found	O
some	O
time	O
to	O
do	O
some	O
experiments	O
in	O
order	O
to	O
understand	O
the	O
difference	O
between	O
them	O
.	O

Here's	O
what	O
I	O
discovered	O
:	O

`	O
log	O
`	O
only	O
allows	O
positive	O
values	O
,	O
and	O
lets	O
you	O
choose	O
how	O
to	O
handle	O
negative	O
ones	O
(	O
`	O
mask	B-API
`	O
or	O
`	O
clip	B-API
`)	O
.	O

`	O
symlog	O
`	O
means	O
symmetrical	O
log	O
,	O
and	O
allows	O
positive	O
and	O
negative	O
values	O
.	O

`	O
symlog	O
`	O
allows	O
to	O
set	O
a	O
range	O
around	O
zero	O
within	O
the	O
plot	O
will	O
be	O
linear	O
instead	O
of	O
logarithmic	O
.	O

I	O
think	O
everything	O
will	O
get	O
a	O
lot	O
easier	O
to	O
understand	O
with	O
graphics	O
and	O
examples	O
,	O
so	O
let's	O
try	O
them	O
:	O

Just	O
for	O
completeness	O
,	O
I've	O
used	O
the	O
following	O
code	O
to	O
save	O
each	O
figure	O
:	O

Remember	O
you	O
can	O
change	O
the	O
figure	O
size	O
using	O
:	O

(	O
If	O
you	O
are	O
unsure	O
about	O
me	O
answering	O
my	O
own	O
question	O
,	O
read	O
this	O
)	O

symlog	O
is	O
like	O
log	O
but	O
allows	O
you	O
to	O
define	O
a	O
range	O
of	O
values	O
near	O
zero	O
within	O
which	O
the	O
plot	O
is	O
linear	O
,	O
to	O
avoid	O
having	O
the	O
plot	O
go	O
to	O
infinity	O
around	O
zero	O
.	O

From	O
http://matplotlib.sourceforge.net/api/axes_api.html#matplotlib.axes.Axes.set_xscale	O

In	O
a	O
log	O
graph	O
,	O
you	O
can	O
never	O
have	O
a	O
zero	O
value	O
,	O
and	O
if	O
you	O
have	O
a	O
value	O
that	O
approaches	O
zero	O
,	O
it	O
will	O
spike	O
down	O
way	O
off	O
the	O
bottom	O
off	O
your	O
graph	O
(	O
infinitely	O
downward	O
)	O
because	O
when	O
you	O
take	O
"	O
log	O
(	O
approaching	O
zero	O
)"	O
you	O
get	O
"	O
approaching	O
negative	O
infinity	O
"	O
.	O

symlog	O
would	O
help	O
you	O
out	O
in	O
situations	O
where	O
you	O
want	O
to	O
have	O
a	O
log	O
graph	O
,	O
but	O
when	O
the	O
value	O
may	O
sometimes	O
go	O
down	O
towards	O
,	O
or	O
to	O
,	O
zero	O
,	O
but	O
you	O
still	O
want	O
to	O
be	O
able	O
to	O
show	O
that	O
on	O
the	O
graph	O
in	O
a	O
meaningful	O
way	O
.	O

If	O
you	O
need	O
symlog	O
,	O
you'd	O
know	O
.	O

Well	O
...	O

I	O
read	O
that	O
,	O
but	O
I	O
still	O
don't	O
know	O
when	O
I	O
should	O
use	O
one	O
or	O
another	O
.	O

I	O
was	O
expecting	O
some	O
kind	O
of	O
graphical	O
example	O
so	O
I	O
could	O
actually	O
see	O
what	O
is	O
the	O
problem	O
that	O
symlog	O
tries	O
to	O
solve	O
.	O

