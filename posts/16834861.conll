Create	O
own	O
colormap	O
using	O
matplotlib	O
and	O
plot	O
color	O
scale	O

I	O
have	O
the	O
following	O
problem	O
,	O
I	O
want	O
to	O
create	O
my	O
own	O
colormap	O
(	O
red-mix-violet-mix-blue	O
)	O
that	O
maps	O
to	O
values	O
between	O
-2	O
and	O
+2	O
and	O
want	O
to	O
use	O
it	O
to	O
color	O
points	O
in	O
my	O
plot	O
.	O

The	O
plot	O
should	O
then	O
have	O
the	O
colorscale	O
to	O
the	O
right	O
.	O

That	O
is	O
how	O
I	O
create	O
the	O
map	B-API
so	O
far	O
.	O

But	O
I	O
am	O
not	O
really	O
sure	O
if	O
it	O
mixes	O
the	O
colors	O
.	O

That	O
way	O
I	O
map	B-API
the	O
colors	O
to	O
the	O
values	O
.	O

Then	O
I	O
plot	O
it	O
:	O

My	O
problems	O
are	O
:	O

1	O
.	O

I	O
can't	O
plot	O
the	O
color	O
scale	O
.	O

2	O
.	O

I	O
am	O
not	O
completely	O
sure	O
if	O
my	O
scale	O
is	O
creating	O
a	O
continues	O
(	O
smooth	O
)	O
colorscale	O
.	O

Could	O
you	O
clarify	O
your	O
question	O
a	O
bit	O
?	O

For	O
example	O
,	O
`	O
c=	O
`	O
specifies	O
the	O
line	O
color	O
,	O
while	O
you	O
are	O
talking	O
about	O
points	O
.	O

You	O
can	O
only	O
specify	O
one	O
`	O
markerfacecolor	O
`	O
,	O
scatter	O
might	O
be	O
a	O
better	O
option	O
if	O
you	O
really	O
want	O
points	O
.	O

And	O
indeed	O
`	O
ListedColormap	O
`	O
is	O
listed	O
,	O
not	O
continuous	O
,	O
see	O
`	O
LinearSegmentedColormap	O
`	O
.	O

That	O
is	O
strange	O
,	O
it	O
is	O
supposed	O
to	O
be	O
points	O
and	O
it	O
looks	O
like	O
points	O
.	O

You	O
can	O
off	O
course	O
,	O
but	O
thats	O
what	O
you	O
should	O
clarify	O
.	O

We	O
cant	O
see	O
what	O
plot	O
style	O
you	O
are	O
using	O
.	O

If	O
you	O
use	O
`	O
plt.plot	O
(	O
values	O
,	O
'	O
o	O
')`	O
,	O
you	O
will	O
plot	O
only	O
markers	O
and	O
no	O
line	O
,	O
but	O
the	O
markers	O
will	O
have	O
one	O
fixed	O
color	O
which	O
doesnt	O
(	O
and	O
cant	O
)	O
vary	O
by	O
the	O
value	O
.	O

There	O
is	O
an	O
illustrative	O
example	O
of	O
how	O
to	O
create	O
custom	O
colormaps	O
here	O
.	O

The	O
docstring	O
is	O
essential	O
for	O
understanding	O
the	O
meaning	O
of	O

`	O
cdict	O
`	O
.	O

Once	O
you	O
get	O
that	O
under	O
your	O
belt	O
,	O
you	O
might	O
use	O
a	O
`	O
cdict	O
`	O
like	O
this	O
:	O

Although	O
the	O
`	O
cdict	O
`	O
format	O
gives	O
you	O
a	O
lot	O
of	O
flexibility	O
,	O
I	O
find	O
for	O
simple	O

gradients	O
its	O
format	O
is	O
rather	O
unintuitive	O
.	O

Here	O
is	O
a	O
utility	O
function	O
to	O
help	O

generate	O
simple	O
LinearSegmentedColormaps	O
:	O

By	O
the	O
way	O
,	O
the	O
`	O
for-loop	O
`	O

plots	O
one	O
point	O
for	O
every	O
call	O
to	O
`	O
plt.plot	O
`	O
.	O

This	O
will	O
work	O
for	O
a	O
small	O
number	O
of	O
points	O
,	O
but	O
will	O
become	O
extremely	O
slow	O
for	O
many	O
points	O
.	O

`	O
plt.plot	O
`	O
can	O
only	O
draw	O
in	O
one	O
color	O
,	O
but	O
`	O
plt.scatter	O
`	O
can	O
assign	O
a	O
different	O
color	O
to	O
each	O
dot	O
.	O

Thus	O
,	O
`	O
plt.scatter	O
`	O
is	O
the	O
way	O
to	O
go	O
.	O

Now	O
I	O
got	O
a	O
problem	O
.	O

I	O
also	O
would	O
like	O
to	O
get	O
a	O
different	O
marker	O
symbol	O
according	O
to	O
the	O
color	O
(	O
I	O
have	O
13	O
different	O
colors	O
)	O
.	O

But	O
the	O
scatter	O
plot	O
allows	O
only	O
one	O
marker	O
per	O
plot	O
,	O
or	O
do	O
I	O
miss	O
something	O
?	O

In	O
that	O
case	O
you	O
will	O
need	O
to	O
call	O
`	O
plt.scatter	O
`	O
(	O
or	O
`	O
plt.plot	O
`)	O
once	O
for	O
each	O
color	O
/	O
marker	O
combination	O
.	O

Why	O
can't	O
I	O
use	O
a	O
color	O
map	B-API
created	O
with	O
this	O
awesome	O
function	O
in	O
plt.set_cmap()	O
?	O

The	O
error	O
is	O
very	O
long	O
,	O
the	O
last	O
line	O
is	O
ValueError	O
:	O
Colormap	O
CustomMap	O
is	O
not	O
recognized	O
.	O

@USER	O
:	O
First	O
register	O
the	O
colormap	O
:	O
`	O
plt.register_cmap	O
(	O
name=	O
rvb.name	O
,	O
cmap=rvb	O
)`	O
and	O
then	O
call	O
`	O
plt.set_cmap	O
(	O
rvb	O
)`	O
.	O

@USER	O
:	O
`	O
rvb	O
`	O
above	O
is	O
a	O
full-fledge	O
Colormap	O
,	O
just	O
like	O
`	O
plt.cm.cool	O
`	O
.	O

So	O
they	O
are	O
fungible	O
:	O
`	O
color	O
=	O
rvb	O
(	O
x	O
/	O
y	O
)`	O
.	O

If	O
you	O
want	O
to	O
automate	O
the	O
creating	O
of	O
a	O
custom	O
divergent	O
colormap	O
commonly	O
used	O
for	O
surface	O
plots	O
,	O
this	O
module	O
combined	O
with	O
@USER	O
method	O
worked	O
well	O
for	O
me	O
.	O

The	O
high	O
and	O
low	O
values	O
can	O
be	O
either	O
string	O
color	O
names	O
or	O
rgb	O
tuples	O
.	O

This	O
is	O
the	O
result	O
using	O
the	O
surface	O
plot	O
demo	O
:	O

Very	O
neat	O
function	O
!	O

