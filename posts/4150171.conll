How	O
to	O
create	O
a	O
density	O
plot	O
in	O
matplotlib	O
?	O

In	O
R	O
I	O
can	O
create	O
the	O
desired	O
output	O
by	O
doing	O
:	O

In	O
python	O
(	O
with	O
matplotlib	O
)	O
the	O
closest	O
I	O
got	O
was	O
with	O
a	O
simple	O
histogram	O
:	O

I	O
also	O
tried	O
the	O
normed=True	O
parameter	O
but	O
couldn't	O
get	O
anything	O
other	O
than	O
trying	O
to	O
fit	O
a	O
gaussian	O
to	O
the	O
histogram	O
.	O

My	O
latest	O
attempts	O
were	O
around	O
`	O
scipy.stats	O
`	O
and	O
`	O
gaussian_kde	O
`	O
,	O
following	O
examples	O
on	O
the	O
web	O
,	O
but	O
I've	O
been	O
unsuccessful	O
so	O
far	O
.	O

Have	O
a	O
look	O
at	O
`	O
seaborn	O
`	O
stackoverflow.com/a/32803224/1922302	O

Sven	O
has	O
shown	O
how	O
to	O
use	O
the	O
class	O
`	O
gaussian_kde	O
`	O
from	O
Scipy	O
,	O
but	O
you	O
will	O
notice	O
that	O
it	O
doesn't	O
look	O
quite	O
like	O
what	O
you	O
generated	O
with	O
R	O
.	O

This	O
is	O
because	O
`	O
gaussian_kde	O
`	O
tries	O
to	O
infer	O
the	O
bandwidth	O
automatically	O
.	O

You	O
can	O
play	O
with	O
the	O
bandwidth	O
in	O
a	O
way	O
by	O
changing	O
the	O
function	O
`	O
covariance_factor	O
`	O
of	O
the	O
`	O
gaussian_kde	O
`	O
class	O
.	O

First	O
,	O
here	O
is	O
what	O
you	O
get	O
without	O
changing	O
that	O
function	O
:	O

However	O
,	O
if	O
I	O
use	O
the	O
following	O
code	O
:	O

I	O
get	O

which	O
is	O
pretty	O
close	O
to	O
what	O
you	O
are	O
getting	O
from	O
R	O
.	O

What	O
have	O
I	O
done	O
?	O

`	O
gaussian_kde	O
`	O
uses	O
a	O
changable	O
function	O
,	O
`	O
covariance_factor	O
`	O
to	O
calculate	O
it's	O
bandwidth	O
.	O

Before	O
changing	O
the	O
function	O
,	O
the	O
value	O
returned	O
by	O
covariance_factor	O
for	O
this	O
data	O
was	O
about	O
.5	O
.	O

Lowering	O
this	O
lowered	O
the	O
bandwidth	O
.	O

I	O
had	O
to	O
call	O
`	O
_compute_covariance	O
`	O
after	O
changing	O
that	O
function	O
so	O
that	O
all	O
of	O
the	O
factors	O
would	O
be	O
calculated	O
correctly	O
.	O

It	O
isn't	O
an	O
exact	O
correspondence	O
with	O
the	O
bw	O
parameter	O
from	O
R	O
,	O
but	O
hopefully	O
it	O
helps	O
you	O
get	O
in	O
the	O
right	O
direction	O
.	O

@USER	O
Nice	O
answer	O
(	O
+1	O
)	O
and	O
not	O
wanting	O
to	O
start	O
any	O
Python	O
v	O
R	O
flame	O
wars	O
or	O
anything	O
,	O
but	O
I	O
am	O
loving	O
the	O
way	O
R	O
works	O
with	O
data	O
much	O
more	O
succinctly	O
that	O
python	O
and	O
other	O
languages	O
.	O

I'm	O
sure	O
python	O
has	O
lots	O
of	O
good	O
points	O
over	O
R	O
(	O
I'm	O
not	O
a	O
Python	O
user	O
so	O
I'm	O
so	O
totally	O
uniformed	O
to	O
possibly	O
comment	O
)	O
and	O
can	O
be	O
used	O
for	O
lots	O
more	O
work	O
than	O
analysing	O
data	O
,	O
but	O
as	O
a	O
long-time	O
R	O
user	O
I	O
do	O
forget	O
how	O
succinct	O
a	O
language	O
it	O
is	O
for	O
such	O
tasks	O
until	O
examples	O
like	O
this	O
crop	O
up	O
.	O

(	O
still	O
fighting	O
with	O
editing	O
comments	O
)	O
Here	O
is	O
a	O
subclass	O
of	O
gaussian_kde	O
that	O
allows	O
to	O
set	O
the	O
bandwidth	O
as	O
an	O
argument	O
and	O
more	O
examples	O
:	O
mail.scipy.org/pipermail/scipy-user/2010-January/023877.html	O
and	O
there	O
is	O
an	O
enhancement	O
ticket	O
at	O
projects.scipy.org/scipy/ticket/1092	O
.	O

Note	O
,	O
gaussian_kde	O
is	O
designed	O
for	O
n-dimensional	O
data	O
.	O

@USER	O
Simpson	O
,	O
yes	O
,	O
R	O
is	O
more	O
succinct	O
because	O
it	O
has	O
a	O
narrower	O
scope	O
.	O

It	O
is	O
made	O
for	O
statistical	O
computation	O
and	O
graphics	O
.	O

Python	O
is	O
a	O
general	O
programming	O
language	O
that	O
can	O
do	O
pretty	O
much	O
whatever	O
you	O
want	O
it	O
to	O
do	O
.	O

Because	O
of	O
that	O
,	O
the	O
syntax	O
might	O
not	O
be	O
as	O
succinct	O
.	O

Part	O
of	O
that	O
is	O
a	O
different	O
design	O
in	O
Numpy	O
/	O
Scipy	O
,	O
but	O
part	O
of	O
it	O
is	O
just	O
the	O
modular	O
set-up	O
on	O
Python	O
.	O

R	O
is	O
great	O
if	O
you	O
only	O
need	O
to	O
do	O
computations	O
and	O
graphics	O
,	O
but	O
if	O
you	O
need	O
to	O
use	O
those	O
computations	O
in	O
some	O
brader	O
applicatoin	O
,	O
then	O
you	O
might	O
want	O
something	O
like	O
Python	O
.	O

However	O
,	O
you	O
can	O
also	O
use	O
R	O
from	O
Python	O
...	O

@USER	O
-	O
Yes	O
indeed	O
!	O

That	O
was	O
partly	O
my	O
point	O
-	O
it	O
was	O
a	O
pleasant	O
surprise	O
on	O
the	O
R	O
side	O
rather	O
than	O
a	O
dig	O
at	O
the	O
python	O
side	O
.	O

A	O
`	O
set_bandwidth	O
`	O
method	O
and	O
a	O
`	O
bw_method	O
`	O
constructor	O
argument	O
were	O
added	O
to	O
gaussian_kde	O
in	O
scipy	O
0.11.0	O
per	O
issue	O
1619	O

Five	O
years	O
later	O
,	O
when	O
I	O
Google	O
"	O
how	O
to	O
create	O
a	O
kernel	O
density	O
plot	O
using	O
python	O
"	O
,	O
this	O
thread	O
still	O
shows	O
up	O
at	O
the	O
top	O
!	O

Today	O
,	O
a	O
much	O
easier	O
way	O
to	O
do	O
this	O
is	O
to	O
use	O
seaborn	O
,	O
a	O
package	O
that	O
provides	O
many	O
convenient	O
plotting	O
functions	O
and	O
good	O
style	O
management	O
.	O

Thank	O
you	O
so	O
much	O
..	O

Been	O
searching	O
for	O
something	O
like	O
this	O
since	O
days	O
..	O
can	O
u	O
pls	O
explain	O
why	O
the	O
`	O
bw=	O
0.5	O
`	O
is	O
given	O
?	O

@USER	O
The	O
`	O
bw	O
`	O
parameter	O
stands	O
for	O
bandwidth	O
.	O

I	O
was	O
trying	O
to	O
match	O
OP's	O
setting	O
(	O
see	O
his	O
original	O
first	O
code	O
example	O
)	O
.	O

For	O
a	O
detailed	O
explanation	O
of	O
what	O
`	O
bw	O
`	O
controls	O
,	O
see	O
en.wikipedia.org/wiki	O
.	O

Basically	O
it	O
controls	O
how	O
smooth	O
you	O
want	O
the	O
density	O
plot	O
to	O
be	O
.	O

The	O
larger	O
the	O
bw	O
,	O
the	O
more	O
smooth	O
it	O
will	O
be	O
.	O

I	O
have	O
another	O
query	O
to	O
ask	O
my	O
data	O
is	O
discrete	O
in	O
nature	O
and	O
I	O
am	O
trying	O
to	O
plot	O
the	O
PDF	O
for	O
that	O
,	O
after	O
reading	O
through	O
scipy	O
doc	O
I	O
understood	O
that	O
PMF	O
=	O
PDF	O
any	O
suggestions	O
on	O
that	O
how	O
to	O
plot	O
it	O
?	O

When	O
I	O
try	O
this	O
I	O
get	O
`	O
TypeError	O
:	O
slice	O
indices	O
must	O
be	O
integers	O
or	O
None	O
or	O
have	O
an	O
__index__	O
method	O
`	O

Maybe	O
try	O
something	O
like	O
:	O

You	O
can	O
easily	O
replace	O
`	O
gaussian_kde()	O
`	O
by	O
a	O
different	O
kernel	O
density	O
estimate	O
.	O

+1	O
for	O
the	O
working	O
example	O
and	O
already	O
getting	O
close	O
to	O
the	O
desired	O
output	O

After	O
trying	O
most	O
on	O
this	O
page	O
-	O
thank	O
you	O
.	O

Option	O
1	O
:	O

Use	O
`	O
pandas	O
`	O
dataframe	B-API
plot	O
(	O
built	O
on	O
top	O
of	O
`	O
matplotlib	O
`)	O
:	O

Option	O
2	O
:	O

Use	O
`	O
distplot	O
`	O
of	O
`	O
seaborn	O
`	O
:	O

To	O
add	O
the	O
bandwidth	O
parameter	O
:	O
df.plot.density	B-API
(	O
bw_method=	O
0.5	O
)	O

