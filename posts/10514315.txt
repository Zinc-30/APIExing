How to add a second x-axis in matplotlib
I have a very simple question . I need to have a second x-axis on my plot and I want that this axis has a certain number of tics that correspond to certain position of the first axis .
Let's try with an example . Here I am plotting the dark matter mass as a function of the expansion factor , defined as 1 /( 1+z ) , that ranges from 0 to 1 .
I would like to have another x-axis , on the top of my plot , showing the corresponding z for some values of the expansion factor . Is that possible ? If yes , how can I have xtics ax
What plotting library are you using ?
The functions you are using are not built in to python - I assume you are talking about matplotlib ? If so , the question How do I plot multiple x or y axes in matplotlib ? seems to cover this .
I edited the title , yes I am using matplotlib .
See matplotlib.org/examples/api/two_scales.html
I'm taking a cue from the comments in @USER ' s answer , it sounds like you want to set a list of ` new_tick_locations ` by a function from the old x-axis to the new x-axis . The ` tick_function ` below takes in a numpy array of points , maps them to a new value and formats them :
exactly what I needed
If you want to add a title as well , see this question : stackoverflow.com/questions/12750355
@USER , any idea if it is possible to this with one of the scales in log scale ?
@USER I can't check it right now , but does ` ax.set_yscale ( ' log ')` work ?
This example works " by chance " since the xlims are between 0 and 1 ( the default ) . To make this work for arbitrary limits one also needs to make sure the limits of the two axes match with something like ` ax2.set_xlim ( ax1.get_xlim() )` otherwise the ` X ` for the top and the ` X ` for the bottom will be different .
You can use twiny to create 2 x-axis scales . For Example :
Ref : http://matplotlib.sourceforge.net/faq/howto_faq.html#multiple-y-axis-scales
Output :
I'm sorry but that's not what I've asked . I don't need to plot to functions on the same plot with different axis . I just need to have a second x-axis , on the top of my plot , ticked in correspondence of some special position on the first x-axis .
Then just add a dummy 2nd axis with the range you want and clear it . See my edited answer
Sorry but your code doesn't work . I copied and pasted it and then second x-axis overlap with the first one .
Attached the output , is this not what you get / want ?
Not really . Taking your example as a reference I would like on the second x-axis these tics : ( 7 , 8 , 99 ) corresponding to the x-axis position 10 , 30 , 40 . Is that possible in some way ?
Answering your question in Dhara's answer comments : " I would like on the second x-axis these tics : ( 7 , 8 , 99 ) corresponding to the x-axis position 10 , 30 , 40 . Is that possible in some way ? "
Yes , it is .
You'll get :
If You want Your upper axis to be a function of the lower axis tick-values :
Gives :
+1 setting the bound was what I was looking for
I'm forced to post this as an answer instead of a comment due to low reputation .
I had a similar problem to Matteo . The difference being that I had no map from my first x-axis to my second x-axis , only the x-values themselves . So I wanted to set the data on my second x-axis directly , not the ticks , however , there is no ` axes.set_xdata ` . I was able to use Dhara's answer to do this with a modification :
instead of using :
When in use also cleared my plot from ` ax1 ` .
This would be a better answer if you provided the code example , instead of just the changes from Dhara's answer .