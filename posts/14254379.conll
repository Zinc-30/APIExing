How	O
can	O
I	O
attach	O
a	O
pyplot	O
function	O
to	O
a	O
figure	O
instance	O
?	O

Previously	O
,	O
I	O
had	O
a	O
problem	O
with	O
the	O
interference	O
between	O
multiple	O
Matplotlib	O
figures	O
.	O

Finally	O
i	O
got	O
tracked	O
that	O
to	O
an	O
issue	O
that	O
some	O
pyplot	O
functions	O
do	O
not	O
attach	O
to	O
their	O
figure	O
instance	O
but	O
can	O
be	O
rendered	O
in	O
some	O
other	O
figure	O
instances	O
which	O
are	O
created	O
in	O
parallel	O
.	O

Here	O
is	O
some	O
example	O
code	O
:	O

The	O
contour	O
pyplot	O
function	O
in	O
the	O
example	O
above	O
can	O
get	O
rendered	O
in	O
fig1	O
,	O
but	O
occasionally	O
also	O
in	O
some	O
other	O
figure	O
that	O
is	O
generated	O
in	O
parallel	O
.	O

That	O
is	O
very	O
annoying	O
.	O

Is	O
there	O
any	O
way	O
to	O
attach	O
the	O
contour	O
pyplot	O
function	O
to	O
fig1	O
?	O

You	O
can	O
create	O
a	O
subplot	O
and	O
than	O
call	O
the	O
`	O
contour	O
`	O
method	O
of	O
the	O
subplot	O
:	O

`	O
plt.subplots	O
`	O
makes	O
it	O
convenient	O
to	O
create	O
a	O
figure	O
and	O
subplots	O
with	O
a	O
single	O
call	O
:	O

This	O
is	O
a	O
perfect	O
answer	O
:	O
Works	O
like	O
a	O
charm	O
and	O
only	O
needs	O
me	O
to	O
add	O
the	O
three	O
signs	O
'	O
ax	O
.	O

'	O
to	O
my	O
codebase	O
.	O

Thank	O
you	O
very	O
much	O
!	O

thank	O
you	O
.	O

If	O
it	O
is	O
"	O
perfect	O
"	O
you	O
could	O
consider	O
to	O
upvote	O
it	O
;-)	O
.	O

Thanks	O
for	O
the	O
answer	O
,	O
very	O
useful	O
.	O

As	O
a	O
bit	O
of	O
explanation	O
of	O
what	O
is	O
going	O
on	O
here	O
,	O
`	O
matplotlib	O
`	O
has	O
two	O
semi-independent	O
interfaces	O
;	O
the	O
state	O
machine	O
and	O
the	O
OO	O
interface	O
.	O

The	O
state	O
machine	O
code	O
is	O
designed	O
for	O
working	O
in	O
an	O
interactive	O
shell	O
(	O
and	O
mimics	O
matlab's	O
interface	O
)	O
.	O

It	O
does	O
this	O
by	O
wrapping	O
the	O
OO	O
interface	O
in	O
a	O
set	O
of	O
commands	O
that	O
keep	O
track	O
of	O
what	O
the	O
current	O
`	O
figure	O
`	O
and	O
`	O
axes	B-API
`	O
are	O
.	O

When	O
you	O
use	O
the	O
command	O
from	O
`	O
matplotlib.pyplot	O
`	O
(	O
I	O
suspect	O
you	O
have	O
an	O
`	O
from	O
matploblib.pyplot	O
import	O
*	O
`	O
in	O
your	O
code	O
)	O
in	O
is	O
more	O
or	O
less	O
equivalent	O
to	O
doing	O
`	O
gcf()	O
.gca()	O
.contour	O
(	O
...	O
)`	O
.	O

When	O
you	O
create	O
a	O
new	O
figure	O
,	O
it	O
is	O
automatically	O
made	O
current	O
(	O
which	O
is	O
what	O
you	O
want	O
if	O
you	O
are	O
using	O
this	O
in	O
an	O
iteractive	O
shell	O
)	O
so	O
the	O
behavior	O
you	O
see	O
is	O
the	O
'	O
correct	O
'	O
behavior	O
.	O

The	O
state	O
machine	O
interface	O
also	O
has	O
code	O
in	O
it	O
to	O
make	O
sure	O
figures	O
get	O
re-drawn	O
when	O
they	O
need	O
to	O
,	O
manage	O
the	O
gui	O
event	O
loops	O
,	O
etc	O
(	O
all	O
the	O
things	O
you	O
need	O
to	O
do	O
to	O
make	O
the	O
interactive	O
interface	O
work	O
smoothly	O
)	O
.	O

As	O
hayden	O
mentioned	O
in	O
comments	O
,	O
running	O
`	O
ipython	O
--	O
pylab	O
`	O
will	O
automatically	O
run	O
`	O
from	O
matplotlib.pyplot	O
import	O
*	O
`	O
,	O
which	O
gives	O
you	O
a	O
very	O
nice	O
interactive	O
shell	O
.	O

The	O
OO	O
interface	O
is	O
designed	O
for	O
programmatic	O
dealing	O
with	O
`	O
matplotlib	O
`	O
.	O

What	O
it	O
adds	O
in	O
verbosity	O
(	O
you	O
now	O
have	O
to	O
do	O
most	O
of	O
the	O
work	O
of	O
the	O
state	O
machine	O
)	O
,	O
it	O
makes	O
up	O
for	O
in	O
clarity	O
.	O

In	O
the	O
OO	O
model	O
,	O
most	O
(	O
maybe	O
all	O
)	O
of	O
the	O
plotting	O
functions	O
are	O
associated	O
with	O
`	O
Axes	B-API
`	O
objects	O
(	O
doc	O
)	O
(	O
as	O
there	O
can	O
be	O
more	O
than	O
one	O
axes	O
associated	O
with	O
a	O
figure	O
(	O
ex	O
subplots	O
using	O
`	O
gridspec	O
`)	O
.	O

An	O
alternate	O
way	O
to	O
solve	O
your	O
problem	O
is	O

which	O
will	O
grab	O
the	O
current	O
axes	O
from	O
`	O
fig1	O
`	O
,	O
creating	O
one	O
if	O
necessary	O
.	O

This	O
may	O
be	O
helpful	O
if	O
you	O
keep	O
track	O
of	O
your	O
figure	O
objects	O
,	O
but	O
not	O
your	O
axes	O
objects	O
and	O
want	O
to	O
add	O
another	O
graph	O
to	O
the	O
figure	O
.	O

Thank	O
you	O
,	O
that	O
helped	O
me	O
in	O
my	O
understanding	O
of	O
the	O
issue	O
!	O

worth	O
noting	O
running	O
`	O
ipython	O
--	O
pylab	O
`	O
includes	O
`	O
from	O
matploblib.pyplot	O
import	O
*	O
`	O

