Select	O
rows	O
from	O
a	O
DataFrame	B-API
based	O
on	O
values	O
in	O
a	O
column	O
in	O
pandas	O

How	O
to	O
select	O
rows	O
from	O
a	O
DataFrame	B-API
based	O
on	O
values	O
in	O
some	O
column	O
in	O
pandas	O
?	O

In	O
SQL	O
I	O
would	O
use	O
:	O

I	O
tried	O
to	O
look	O
at	O
pandas	O
documentation	O
but	O
did	O
not	O
immediately	O
find	O
the	O
answer	O
.	O

To	O
select	O
rows	O
whose	O
column	O
value	O
equals	O
a	O
scalar	O
,	O
`	O
some_value	O
`	O
,	O
use	O
`	O
==	O
`	O
:	O

To	O
select	O
rows	O
whose	O
column	O
value	O
is	O
in	O
an	O
iterable	O
,	O
`	O
some_values	O
`	O
,	O
use	O
`	O
isin	B-API
`	O
:	O

Combine	O
multiple	O
conditions	O
with	O
`	O
`	O
:	O

To	O
select	O
rows	O
whose	O
column	O
value	O
does	O
not	O
equal	O
`	O
some_value	O
`	O
,	O
use	O
`	O
!	O

=	O
`	O
:	O

`	O
isin	B-API
`	O
returns	O
a	O
boolean	O
Series	O
,	O
so	O
to	O
select	O
rows	O
whose	O
value	O
is	O
not	O
in	O
`	O
some_values	O
`	O
,	O
negate	O
the	O
boolean	O
Series	O
using	O
`	O
~	O
`	O
:	O

For	O
example	O
,	O

yields	O

If	O
you	O
have	O
multiple	O
values	O
you	O
want	O
to	O
include	O
,	O
put	O
them	O
in	O
a	O

list	O
(	O
or	O
more	O
generally	O
,	O
any	O
iterable	O
)	O
and	O
use	O
`	O
isin	B-API
`	O
:	O

yields	O

Note	O
,	O
however	O
,	O
that	O
if	O
you	O
wish	O
to	O
do	O
this	O
many	O
times	O
,	O
it	O
is	O
more	O
efficient	O
to	O

make	O
an	O
index	O
first	O
,	O
and	O
then	O
use	O
`	O
df.loc	B-API
`	O
:	O

yields	O

or	O
,	O
to	O
include	O
multiple	O
values	O
from	O
the	O
index	O
use	O
`	O
df.index.isin	O
`	O
:	O

yields	O

In	O
fact	O
,	O
df	O
[	O
df	O
[	O
'	O
colume_name	O
']	O
==	O
some_value	O
]	O
also	O
works	O
.	O

But	O
my	O
first	O
attempt	O
,	O
df.where	B-API
(	O
df	O
[	O
'	O
colume_name	O
']	O
==	O
some_value	O
)	O
does	O
not	O
work	O
...	O
not	O
sure	O
why	O
...	O

When	O
you	O
use	O
`	O
df.where	B-API
(	O
condition	O
)`	O
,	O
the	O
condition	O
has	O
to	O
have	O
the	O
same	O
shape	O
as	O
`	O
df	O
`	O
.	O

Those	O
links	O
could	O
be	O
very	O
useful	O
to	O
many	O
of	O
you	O
:	O
pandas.pydata.org/pandas-docs/stable/indexing.html	O
gregreda.com/2013/10/26/working-with-pandas-dataframes	O

FYI	O
:	O
If	O
you	O
want	O
to	O
select	O
a	O
row	O
based	O
upon	O
two	O
(	O
or	O
more	O
)	O
labels	O
(	O
either	O
requiring	O
both	O
or	O
either	O
)	O
,	O
see	O
stackoverflow.com/questions/31756340	O

What	O
about	O
the	O
negative	O
"	O
isnotin	O
"	O
does	O
that	O
exist	O
?	O

tl	O
;d	O
r	O

The	O
pandas	O
equivalent	O
to	O

is	O

Multiple	O
conditions	O
:	O

or	O

Code	O
example	O

In	O
the	O
above	O
code	O
it	O
is	O
the	O
line	O
`	O
df	O
[	O
df.foo	O
==	O
222	O
]`	O
that	O
gives	O
the	O
rows	O
based	O
on	O
the	O
column	O
value	O
,	O
`	O
222	O
`	O
in	O
this	O
case	O
.	O

Multiple	O
conditions	O
are	O
also	O
possible	O
:	O

But	O
at	O
that	O
point	O
I	O
would	O
recommend	O
using	O
the	O
query	O
function	O
,	O
since	O
it's	O
less	O
verbose	O
and	O
yields	O
the	O
same	O
result	O
:	O

This	O
is	O
great	O
for	O
1	O
condition	O
,	O
but	O
what	O
if	O
you	O
have	O
2	O
conditions	O
?	O

For	O
example	O
,	O
you	O
also	O
have	O
column_name2	O
==	O
some_value2	O
?	O

`	O
table	O
[(	O
table.column_name	O
==	O
some_value	O
)	O
|	O
(	O
table.column_name2	O
==	O
some_value2	O
)	O
]`	O
would	O
do	O
the	O
trick	O
.	O

But	O
at	O
that	O
point	O
I	O
would	O
probably	O
use	O
the	O
query-function	O
fredcallaway	O
mentions	O
.	O

I	O
will	O
update	O
my	O
answer	O
to	O
include	O
this	O
information	O
.	O

I	O
find	O
the	O
syntax	O
of	O
the	O
previous	O
answers	O
to	O
be	O
redundant	O
and	O
difficult	O
to	O
remember	O
.	O

Pandas	O
introduced	O
the	O
`	O
query()	O
`	O
method	O
in	O
v0.13	O
and	O
I	O
much	O
prefer	O
it	O
.	O

For	O
your	O
question	O
,	O
you	O
could	O
do	O
`	O
df.query	B-API
(	O
'	O
col	O
==	O
val	O
')`	O

Reproduced	O
from	O
http://pandas.pydata.org/pandas-docs/version/0.17.0/indexing.html#indexing-query	O

You	O
can	O
also	O
access	O
variables	O
in	O
the	O
environment	O
by	O
prepending	O
an	O
`	O
@	O
`	O
.	O

You	O
only	O
need	O
package	O
`	O
numexpr	O
`	O
installed	O
.	O

In	O
my	O
case	O
I	O
needed	O
quotation	O
because	O
val	O
is	O
a	O
string	O
.	O

df.query	B-API
(	O
'	O
col	O
==	O
"	O
val	O
"')	O

Here	O
is	O
a	O
simple	O
example	O

I	O
just	O
tried	O
editing	O
this	O
,	O
but	O
I	O
wasn't	O
logged	O
in	O
,	O
so	O
I'm	O
not	O
sure	O
where	O
my	O
edit	O
went	O
.	O

I	O
was	O
trying	O
to	O
incorporate	O
multiple	O
selection	O
.	O

So	O
I	O
think	O
a	O
better	O
answer	O
is	O
:	O

For	O
a	O
single	O
value	O
,	O
the	O
most	O
straightforward	O
(	O
human	O
readable	O
)	O
is	O
probably	O
:	O

For	O
lists	O
of	O
values	O
you	O
can	O
also	O
use	O
:	O

For	O
example	O
,	O

yields	O

If	O
you	O
have	O
multiple	O
criteria	O
you	O
want	O
to	O
select	O
against	O
,	O
you	O
can	O
put	O
them	O
in	O
a	O
list	O
and	O
use	O
'	O
isin	B-API
'	O
:	O

yields	O

Note	O
,	O
however	O
,	O
that	O
if	O
you	O
wish	O
to	O
do	O
this	O
many	O
times	O
,	O
it	O
is	O
more	O
efficient	O
to	O
make	O
A	O
the	O
index	O
first	O
,	O
and	O
then	O
use	O
df.loc	B-API
:	O

yields	O

How	O
is	O
this	O
any	O
different	O
from	O
imolit's	O
answer	O
?	O

If	O
you	O
came	O
here	O
looking	O
to	O
select	O
rows	O
from	O
a	O
dataframe	B-API
by	O
including	O
those	O
whose	O
column's	O
value	O
is	O
NOT	O
any	O
of	O
a	O
list	O
of	O
values	O
,	O
here's	O
how	O
to	O
flip	O
around	O
unutbu's	O
answer	O
for	O
a	O
list	O
of	O
values	O
above	O
:	O

(	O
To	O
not	O
include	O
a	O
single	O
value	O
,	O
of	O
course	O
,	O
you	O
just	O
use	O
the	O
regular	O
not	O
equals	O
operator	O
,	O
`	O
!	O
=	O
`	O
.	O
)	O

Example	O
:	O

gives	O
us	O

To	O
subset	O
to	O
just	O
those	O
rows	O
that	O
AREN'T	O
`	O
one	O
`	O
or	O
`	O
three	O
`	O
in	O
column	O
`	O
B	O
`	O
:	O

yields	O

To	O
append	B-API
to	O
this	O
famous	O
question	O
(	O
though	O
a	O
bit	O
too	O
late	O
):	O
You	O
can	O
also	O
do	O
`	O
df.groupby	B-API
(	O
'	O
column_name	O
')	O
.get_group	B-API
(	O
'	O
column_desired_value	O
')	O
.reset_index()	B-API
`	O
to	O
make	O
a	O
new	O
data	O
frame	O
with	O
specified	O
column	O
having	O
a	O
particular	O
value	O
.	O

E.g	O
.	O

Run	O
this	O
gives	O
:	O

Using	O
numpy.where	O
results	O
can	O
be	O
achieved	O
faster	O
,	O

using	O
unubtu	O
setup	O
:	O

