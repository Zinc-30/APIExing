How	O
to	O
convert	O
2D	O
float	O
numpy	O
array	O
to	O
2D	O
int	O
numpy	O
array	O
?	O

How	O
to	O
convert	O
real	O
numpy	O
array	O
to	O
int	O
numpy	O
array	O
?	O

Tried	O
using	O
map	B-API
directly	O
to	O
array	O
but	O
it	O
did	O
not	O
work	O
.	O

Use	O
the	O
`	O
astype	B-API
`	O
method	O
.	O

Just	O
make	O
sure	O
you	O
don't	O
have	O
`	O
np.inf	O
`	O
or	O
`	O
np.nan	O
`	O
in	O
your	O
array	O
,	O
since	O
they	O
have	O
surprising	O
results	O
.	O

For	O
example	O
,	O
`	O
np.array	O
([	O
np.inf	O
])	O
.astype	B-API
(	O
int	O
)`	O
outputs	O
`	O
array	O
([	O
-922337203685477580	O
8])	O
`	O
.	O

Some	O
numpy	O
functions	O
for	O
how	O
to	O
control	O
the	O
rounding	O
:	O
rint	O
,	O
floor	O
,	O
trunc	O
,	O
ceil	O
.	O
depending	O
how	O
u	O
wish	O
to	O
round	O
the	O
floats	O
,	O
up	O
,	O
down	O
,	O
or	O
to	O
the	O
nearest	O
int	O
.	O

To	O
make	O
one	O
of	O
this	O
in	O
to	O
int	O
,	O
or	O
one	O
of	O
the	O
other	O
types	O
in	O
numpy	O
,	O
astype	B-API
(	O
as	O
answered	O
by	O
BrenBern	O
):	O

Exactly	O
what	O
I	O
was	O
looking	O
for	O
.	O

`	O
astype	B-API
`	O
is	O
often	O
too	O
generic	O
,	O
and	O
I	O
think	O
it	O
probably	O
is	O
more	O
useful	O
when	O
doing	O
intx	O
-	O
inty	O
conversions	O
.	O

When	O
I	O
want	O
to	O
do	O
float	O
-	O
int	O
conversion	O
being	O
able	O
to	O
choose	O
the	O
kind	O
of	O
rounding	O
is	O
a	O
nice	O
feature	O
.	O

So	O
the	O
simplest	O
way	O
to	O
safely	O
convert	O
almost-ints	O
like	O
`	O
7.99999	O
`	O
to	O
ints	O
like	O
`	O
8	O
`	O
,	O
is	O
`	O
np.rint	O
(	O
arr	O
)	O
.astype	B-API
(	O
int	O
)`	O
?	O

you	O
can	O
use	O
`	O
np.int_	O
`	O
:	O

If	O
you're	O
not	O
sure	O
your	O
input	O
is	O
going	O
to	O
be	O
a	O
Numpy	O
array	O
,	O
you	O
can	O
use	O
`	O
asarray	O
`	O
with	O
`	O
dtype=int	O
`	O
instead	O
of	O
`	O
astype	B-API
`	O
:	O

If	O
the	O
input	O
array	O
already	O
has	O
the	O
correct	O
dtype	B-API
,	O
`	O
asarray	O
`	O
avoids	O
the	O
array	O
copy	O
while	O
`	O
astype	B-API
`	O
does	O
not	O
(	O
unless	O
you	O
specify	O
`	O
copy=False	O
`)	O
:	O

